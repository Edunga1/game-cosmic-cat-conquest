class t{constructor(t,s){this.x=t,this.y=s,this.x=t,this.y=s}static zero(){return new t(0,0)}add(s){return new t(this.x+s.x,this.y+s.y)}subtract(s){return new t(this.x-s.x,this.y-s.y)}unit(){const s=this.length();return new t(this.x/s,this.y/s)}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}multiply(s){return new t(this.x*s,this.y*s)}}class s{constructor(s){this.context=s,this.position=t.zero(),this.velocity=t.zero(),this.elapsed=0}animate(t){this.update(t),this.render()}update(t){this.elapsed+=t,this.position=this.position.add(this.velocity.multiply(t/5))}render(){this.context.save(),this.context.rotate(this.elapsed/1e3),this.context.beginPath(),this.context.moveTo(0,-20),this.context.lineTo(10,10),this.context.lineTo(0,7),this.context.lineTo(-10,10),this.context.lineTo(0,-20),this.context.fillStyle="red",this.context.fill(),this.context.restore()}}class e{constructor(t){this.context=t,this.starElapsed=0,this.backgroundColor="rgb(10, 10, 10)",this.starColorRange=100,this.stars=[],this.maxStars=400}animate(t){this.render(t)}render(t){this.renderBackground(),this.renderStars(),this.checkStarElapsed(t)&&this.updateStars()}renderBackground(){this.context.fillStyle=this.backgroundColor,this.context.fillRect(0,0,this.width,this.height)}renderStars(){this.context.fillStyle="white",this.stars.forEach((t=>{this.context.fillRect(t.x,t.y,1,1)}))}updateStars(){this.stars=[];for(let s=0;s<this.maxStars;s++)this.stars.push(new t(Math.random()*this.width,Math.random()*this.height))}checkStarElapsed(t){return this.starElapsed+=t,this.starElapsed>200&&(this.starElapsed=0,!0)}}class i{constructor(t){this.context=t,this.width=0,this.height=0,this.lastTime=0,this.delta=0,this.enemies=[],this.space=new e(t),this.player=new s(t);for(let e=0;e<10;e++){const e=new s(t);e.position.x=1e3*Math.random()-500,e.position.y=1e3*Math.random()-500,this.enemies.push(e)}console.log(this.player.position),console.log(this.enemies[0].position)}resize(t,s){this.width=t,this.height=s,this.space.width=t,this.space.height=s}animate(t){this.updateDelta(t),this.space.animate(this.delta),this.updatePlayer(),this.updateEnemies(),this.context.restore()}movePlayer(s,e){const i=new t(s,e),h=new t(this.width/2,this.height/2).subtract(i).unit();this.player.velocity=h}stopPlayer(){this.player.velocity=t.zero()}updatePlayer(){this.context.save(),this.context.translate(this.width/2,this.height/2),this.player.animate(this.delta),this.context.restore()}updateEnemies(){this.enemies.forEach((t=>{this.context.save(),this.context.translate(this.width/2+this.player.position.x+t.position.x,this.height/2+this.player.position.y+t.position.y),t.animate(this.delta),this.context.restore()}))}updateDelta(t){this.delta=t-this.lastTime,this.lastTime=t}}(new class{constructor(){this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d"),this.game=new i(this.context)}start(){document.body.appendChild(this.canvas),window.addEventListener("resize",this.resize.bind(this)),this.registerCanvasEvents(),this.resize(),this.animate()}animate(t=0){this.game.animate(t),requestAnimationFrame(this.animate.bind(this))}resize(){this.width=document.body.clientWidth,this.height=document.body.clientHeight,this.canvas.width=this.width,this.canvas.height=this.height,this.game.resize(this.width,this.height)}registerCanvasEvents(){this.canvas.addEventListener("mousedown",this.onMouseDown.bind(this)),this.canvas.addEventListener("mousemove",this.onMouseMove.bind(this)),this.canvas.addEventListener("mouseup",this.onTouchEnd.bind(this)),this.canvas.addEventListener("touchstart",this.onTouchStart.bind(this)),this.canvas.addEventListener("touchend",this.onTouchEnd.bind(this))}onMouseDown(t){this.game.movePlayer(t.clientX,t.clientY)}onMouseMove(t){0!==t.buttons&&this.game.movePlayer(t.clientX,t.clientY)}onTouchStart(t){this.game.movePlayer(t.touches[0].clientX,t.touches[0].clientY)}onTouchEnd(){this.game.stopPlayer()}}).start();
//# sourceMappingURL=index.960c45b1.js.map
