{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-dec24c3a21c15404.js","src/game/core/Point.ts","src/game/mobile/Mobile.ts","src/game/sprite/Sprite.ts","node_modules/@parcel/runtime-js/lib/runtime-d99662e4b0933e94.js","src/game/characters/Cat.ts","node_modules/@parcel/runtime-js/lib/runtime-54656b7000d933e5.js","src/game/characters/CirclingTriangle.ts","src/game/space/Space.ts","src/game/Game.ts","src/App.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"67Pf5\\\":\\\"index.98c10d1b.js\\\",\\\"kp27Z\\\":\\\"cat-sprites-running.47e835c7.png\\\",\\\"1H4Ur\\\":\\\"cat-sprites-idle.8767d413.png\\\"}\"));","export default class Point {\n    constructor(\n        public x: number,\n        public y: number\n    ) {\n        this.x = x\n        this.y = y\n    }\n\n    static zero() {\n        return new Point(0, 0)\n    }\n\n    add(point: Point) {\n        return new Point(this.x + point.x, this.y + point.y)\n    }\n\n    subtract(point: Point) {\n        return new Point(this.x - point.x, this.y - point.y)\n    }\n\n    unit() {\n        const length = this.length()\n        return new Point(this.x / length, this.y / length)\n    }\n\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y)\n    }\n\n    multiply(scalar: number) {\n        return new Point(this.x * scalar, this.y * scalar)\n    }\n\n    angle() {\n        return Math.atan2(this.y, this.x)\n    }\n}\n\n","import Point from \"../core/Point\"\n\nexport default abstract class Mobile {\n  position = Point.zero()\n  velocity = Point.zero()\n  direction = new Point(0, 0)\n  elapsed = 0\n\n  constructor(\n    protected context: CanvasRenderingContext2D\n  ) {\n  }\n\n  animate(delta: number) {\n    this.update(delta)\n    this.render(delta)\n  }\n\n  move(distance: Point) {\n    this.velocity = distance.unit()\n    this.direction = distance\n  }\n\n  stop() {\n    this.velocity = Point.zero()\n  }\n\n  private update(delta: number) {\n    this.elapsed += delta\n    this.position = this.position.add(this.velocity.multiply(delta / 5))\n  }\n\n  protected abstract render(delta: number): void\n}\n","import Point from \"../core/Point\"\n\nexport default class Sprite {\n  frameIndex = 0\n  time = 0\n  framesPerRow: number\n  imageLoaded = false\n\n  constructor(\n    private image: HTMLImageElement,\n    private frameWidth: number,\n    private frameHeight: number,\n    private framesPerSecond = 60,\n  ) {\n    this.image.onload = () => {\n      this.imageLoaded = true\n      this.framesPerRow = Math.floor(image.width / frameWidth)\n    }\n  }\n\n  update(dt: number) {\n    this.time += dt\n    while (this.time > 1000/this.framesPerSecond) {\n      this.time -= 1000/this.framesPerSecond\n      this.frameIndex++\n      if (this.frameIndex >= this.framesPerRow * Math.floor(this.image.height / this.frameHeight)) {\n        this.frameIndex = 0\n      }\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    direction: Point = Point.zero(),\n  ) {\n    if (!this.imageLoaded) return\n\n    const row = Math.floor(this.frameIndex / this.framesPerRow)\n    const col = this.frameIndex % this.framesPerRow\n    let angle = direction.angle()\n\n    ctx.save()\n\n    // Flip the sprite if the direction is left\n    if (direction.x < 0) {\n      ctx.scale(-1, 1)\n      angle = Math.PI - angle\n    }\n\n    ctx.rotate(angle)\n    ctx.drawImage(\n      this.image,\n      col * this.frameWidth,\n      row * this.frameHeight,\n      this.frameWidth,\n      this.frameHeight,\n      x - this.frameWidth / 2,\n      y - this.frameHeight / 2,\n      this.frameWidth,\n      this.frameHeight\n    )\n\n    ctx.restore()\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kp27Z\")).toString();","import Mobile from \"../mobile/Mobile\"\nimport Sprite from \"../sprite/Sprite\"\nimport CatRunningSprite from \"../../../assets/images/cat-sprites-running.png\"\nimport CatIdleSprite from \"../../../assets/images/cat-sprites-idle.png\"\nimport Point from \"../core/Point\"\n\nenum Mode {\n  IDLE,\n  RUNNING,\n}\n\nexport default class Cat extends Mobile {\n  private sprites: Map<Mode, Sprite> = new Map()\n  private mode = Mode.IDLE\n\n  static SPRITES = [\n    { mode: Mode.IDLE, img: CatIdleSprite, width: 20, height: 15, fps: 5 },\n    { mode: Mode.RUNNING, img: CatRunningSprite, width: 22, height: 16, fps: 10 },\n  ]\n\n  constructor(\n    context: CanvasRenderingContext2D\n  ) {\n    super(context)\n\n    Cat.SPRITES.forEach(({ mode, img, width, height, fps }) => {\n      const image = new Image()\n      image.src = img\n      this.sprites.set(mode, new Sprite(image, width, height, fps))\n    })\n  }\n\n  render(delta: number) {\n    const sprite = this.sprites.get(this.mode)\n    sprite?.update(delta)\n    sprite?.draw(this.context, 0, 0, this.direction)\n  }\n  \n  move(distance: Point) {\n    super.move(distance)\n    this.mode = Mode.RUNNING\n  }\n\n  stop() {\n    super.stop()\n    this.mode = Mode.IDLE\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1H4Ur\")).toString();","import Mobile from \"../mobile/Mobile\"\nimport Sprite from \"../sprite/Sprite\"\n\nexport default class CirclingTriangle extends Mobile {\n  sprite: Sprite\n\n  constructor(\n    context: CanvasRenderingContext2D\n  ) {\n    super(context)\n  }\n\n  render() {\n    this.context.save()\n    this.context.rotate(this.elapsed / 1000)\n    this.context.beginPath()\n    this.context.moveTo(0, -5)\n    this.context.lineTo(5, 5)\n    this.context.lineTo(0, 3)\n    this.context.lineTo(-5, 5)\n    this.context.lineTo(0, -5)\n    this.context.fillStyle = \"red\"\n    this.context.fill()\n    this.context.restore()\n  }\n}\n","import Point from \"../core/Point\"\n\nexport default class Space {\n    width: number\n    height: number\n    starElapsed = 0\n    backgroundColor = \"rgb(10, 10, 10)\"\n    starColorRange = 100\n    stars: Point[] = []\n    maxStars = 400\n\n    constructor(\n        private context: CanvasRenderingContext2D\n    ) {\n    }\n\n    animate(delta: number) {\n        this.render(delta)\n    }\n\n    private render(delta: number) {\n        this.renderBackground()\n        this.renderStars()\n\n        if (this.checkStarElapsed(delta)) {\n            this.updateStars()\n        }\n    }\n\n    private renderBackground() {\n        this.context.fillStyle = this.backgroundColor\n        this.context.fillRect(0, 0, this.width, this.height)\n    }\n\n    private renderStars() {\n        this.context.fillStyle = \"white\"\n        this.stars.forEach(star => {\n            this.context.fillRect(star.x, star.y, 1, 1)\n        })\n    }\n\n    private updateStars() {\n        this.stars = []\n        for (let i = 0; i < this.maxStars; i++) {\n            this.stars.push(new Point(\n                Math.random() * this.width,\n                Math.random() * this.height,\n            ))\n        }\n    }\n\n    private checkStarElapsed(delta: number) {\n        this.starElapsed += delta\n        if (this.starElapsed > 200) {\n            this.starElapsed = 0\n            return true\n        }\n        return false\n    }\n}\n","import Cat from \"./characters/Cat\"\nimport CirclingTriangle from \"./characters/CirclingTriangle\"\nimport Point from \"./core/Point\"\nimport Mobile from \"./mobile/Mobile\"\nimport Space from \"./space/Space\"\n\nexport default class Game {\n  width = 0\n  height = 0\n  lastTime = 0\n  delta = 0\n  space: Space\n  player: Mobile\n  enemies: Mobile[] = []\n\n  constructor(\n    private context: CanvasRenderingContext2D,\n  ) {\n    this.space = new Space(context)\n    this.player = new Cat(context)\n\n    for (let i = 0; i < 10; i++) {\n      const enemy = new CirclingTriangle(context)\n      enemy.position.x = Math.random() * 1000 - 500\n      enemy.position.y = Math.random() * 1000 - 500\n      this.enemies.push(enemy)\n    }\n  }\n\n  resize(width: number, height: number) {\n    this.width = width\n    this.height = height\n    this.space.width = width\n    this.space.height = height\n  }\n\n  animate(time: number) {\n    this.updateDelta(time)\n    this.space.animate(this.delta)\n    this.updatePlayer()\n    this.updateEnemies()\n    this.context.restore()\n  }\n\n  movePlayer(x: number, y: number) {\n    const point = new Point(x, y)\n    const center = new Point(this.width / 2, this.height / 2)\n    const distance = center.subtract(point)\n    this.player.move(distance)\n  }\n\n  stopPlayer() {\n    this.player.stop()\n  }\n\n  private updatePlayer() {\n    this.context.save()\n    this.context.translate(this.width / 2, this.height / 2)\n    this.player.animate(this.delta)\n    this.context.restore()\n  }\n\n  private updateEnemies() {\n    this.enemies.forEach(enemy => {\n      this.context.save()\n      this.context.translate(\n        this.width / 2 + this.player.position.x + enemy.position.x,\n        this.height / 2 + this.player.position.y + enemy.position.y,\n      )\n      enemy.animate(this.delta)\n      this.context.restore()\n    })\n  }\n\n  private updateDelta(time: number) {\n    this.delta = time - this.lastTime\n    this.lastTime = time\n  }\n}\n","import Game from \"./game/Game\"\n\nexport class App {\n    canvas: HTMLCanvasElement\n    context: CanvasRenderingContext2D\n    game: Game\n    width: number\n    height: number\n\n    constructor() {\n        this.canvas = document.createElement(\"canvas\")\n        this.context = this.canvas.getContext(\"2d\")!\n        this.game = new Game(this.context)\n    }\n\n    start() {\n        document.body.appendChild(this.canvas)\n        window.addEventListener(\"resize\", this.resize.bind(this))\n        this.registerCanvasEvents()\n        this.resize()\n        this.animate()\n    }\n\n    private animate(time = 0) {\n        this.game.animate(time)\n\n        requestAnimationFrame(this.animate.bind(this))\n    }\n\n    private resize() {\n        this.width = document.body.clientWidth\n        this.height = document.body.clientHeight\n        this.canvas.width = this.width\n        this.canvas.height = this.height\n\n        this.game.resize(this.width, this.height)\n    }\n\n    private registerCanvasEvents() {\n        this.canvas.addEventListener(\"mousedown\", this.onMouseDown.bind(this))\n        this.canvas.addEventListener(\"mousemove\", this.onMouseMove.bind(this))\n        this.canvas.addEventListener(\"mouseup\", this.onTouchEnd.bind(this))\n        this.canvas.addEventListener(\"touchstart\", this.onTouchStart.bind(this))\n        this.canvas.addEventListener(\"touchend\", this.onTouchEnd.bind(this))\n    }\n\n    private onMouseDown(event: MouseEvent) {\n        this.game.movePlayer(event.clientX, event.clientY)\n    }\n\n    private onMouseMove(event: MouseEvent) {\n        if (event.buttons === 0)\n            return\n        this.game.movePlayer(event.clientX, event.clientY)\n    }\n\n    private onTouchStart(event: TouchEvent) {\n        this.game.movePlayer(event.touches[0].clientX, event.touches[0].clientY)\n    }\n\n    private onTouchEnd() {\n        this.game.stopPlayer()\n    }\n}\n\nnew App().start()\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$1162b4d1b63bcb0b$export$2e2bcd8739ae039","constructor","x","y","this","static","add","point","subtract","unit","Math","sqrt","multiply","scalar","angle","atan2","$73c3f5d8867f376c$export$2e2bcd8739ae039","context","position","zero","velocity","direction","elapsed","animate","delta","update","render","move","distance","stop","$da5fc1c35aff1e0d$export$2e2bcd8739ae039","image","frameWidth","frameHeight","framesPerSecond","frameIndex","time","imageLoaded","onload","framesPerRow","floor","width","dt","height","draw","ctx","row","col","save","scale","PI","rotate","drawImage","restore","$e2c9dcac0f02a629$exports","URL","resolve","import","meta","url","toString","$85c94ce00cb2a82b$var$Mode","Mode","$7357178c6a7828df$exports","$85c94ce00cb2a82b$export$2e2bcd8739ae039","sprites","Map","mode","IDLE","img","$parcel$interopDefault","fps","RUNNING","super","SPRITES","forEach","Image","src","set","sprite","get","$1680c37e97ccc699$export$2e2bcd8739ae039","beginPath","moveTo","lineTo","fillStyle","fill","$f8daf18d7ca6e6d0$export$2e2bcd8739ae039","starElapsed","backgroundColor","starColorRange","stars","maxStars","renderBackground","renderStars","checkStarElapsed","updateStars","fillRect","star","push","random","$1d65543a723a8bec$export$2e2bcd8739ae039","lastTime","enemies","space","player","enemy","resize","updateDelta","updatePlayer","updateEnemies","movePlayer","stopPlayer","translate","canvas","document","createElement","getContext","game","start","body","appendChild","window","addEventListener","bind","registerCanvasEvents","requestAnimationFrame","clientWidth","clientHeight","onMouseDown","onMouseMove","onTouchEnd","onTouchStart","event","clientX","clientY","buttons","touches"],"version":3,"file":"index.98c10d1b.js.map"}