{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-248d45b26853c557.js","src/game/core/math/Point.ts","src/game/mobile/Attributes.ts","src/game/mobile/MobileCollection.ts","src/game/mobile/Mobile.ts","src/game/sprite/Sprite.ts","node_modules/@parcel/runtime-js/lib/runtime-d99662e4b0933e94.js","src/game/characters/Cat.ts","node_modules/@parcel/runtime-js/lib/runtime-54656b7000d933e5.js","src/game/characters/CirclingTriangle.ts","src/game/characters/TargetPoint.ts","node_modules/@parcel/runtime-js/lib/runtime-5e9d9a7d7a650e2f.js","src/game/effects/SpriteEffectBase.ts","src/game/effects/ConfettiEffect.ts","src/game/space/Space.ts","src/game/stage/GameLevel.ts","src/game/Game.ts","src/App.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"67Pf5\\\":\\\"index.6f24c07b.js\\\",\\\"kp27Z\\\":\\\"cat-sprites-running.47e835c7.png\\\",\\\"1H4Ur\\\":\\\"cat-sprites-idle.8767d413.png\\\",\\\"7agUk\\\":\\\"confetti-sprites.0546130f.png\\\"}\"));","export default class Point {\n  constructor(\n    public x: number,\n    public y: number\n  ) {\n    this.x = x\n    this.y = y\n  }\n\n  static zero() {\n    return new Point(0, 0)\n  }\n\n  add(point: Point) {\n    return new Point(this.x + point.x, this.y + point.y)\n  }\n\n  subtract(point: Point) {\n    return new Point(this.x - point.x, this.y - point.y)\n  }\n\n  unit() {\n    const length = this.length()\n    if (length === 0) {\n      return Point.zero()\n    }\n    return new Point(this.x / length, this.y / length)\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  multiply(scalar: number) {\n    return new Point(this.x * scalar, this.y * scalar)\n  }\n\n  angle() {\n    return Math.atan2(this.y, this.x)\n  }\n\n  distanceTo(point: Point) {\n    return this.subtract(point).length()\n  }\n\n  limit(max: number) {\n    const length = this.length()\n    if (length > max) {\n      return this.unit().multiply(max)\n    }\n    return this\n  }\n\n  around(distance: number) {\n    const angle = Math.random() * Math.PI * 2\n    return new Point(\n      this.x + Math.cos(angle) * distance,\n      this.y + Math.sin(angle) * distance,\n    )\n  }\n}\n\n","export default class Attributes {\n  public hp = NumericAttribute.of(100)\n  public size = 1\n  public power = 0\n  public range = new NumericAttribute(1, 10)\n  public attackPeriod = 1000\n\n  damage(source: Attributes) {\n    this.hp.value -= source.power\n  }\n}\n\nclass NumericAttribute {\n  private _value: number\n  private _max: number\n\n  constructor(\n    value: number,\n    max: number,\n  ) {\n    this._value = value\n    this._max = max\n  }\n\n  static of(value: number) {\n    return new NumericAttribute(value, value)\n  }\n\n  set value(value: number) {\n    this._value = value\n    this._max = Math.max(value, this._max)\n  }\n\n  get value() {\n    return this._value\n  }\n\n  set max(max: number) {\n    this._max = max\n    this._value = Math.min(max, this._value)\n  }\n\n  get max() {\n    return this._max\n  }\n}\n","import Point from \"../core/math/Point\"\nimport Mobile from \"./Mobile\"\n\nexport default class MobileCollection {\n  collection: Mobile[] = []\n\n  get length() {\n    return this.collection.filter(mobile => mobile.isAlive).length\n  }\n\n  get first(): Mobile | undefined {\n    return this.collection[0]\n  }\n\n  includes(mobile: Mobile) {\n    return this.collection.includes(mobile)\n  }\n\n  add(mobile: Mobile) {\n    this.collection.push(mobile)\n  }\n\n  nearestMobilesInRange(position: Point, range: number): Mobile[] {\n    return this.collection.filter(mobile => {\n      return mobile.isAlive && mobile.position.distanceTo(position) < range\n    })\n  }\n}\n","import Point from \"../core/math/Point\"\nimport Attributes from \"./Attributes\"\nimport IMobileAddedObservable from \"./IMobileAddedObservable\"\nimport IMobileAddedObserver from \"./IMobileAddedObserver\"\nimport MobileCollection from \"./MobileCollection\"\n\nexport default abstract class Mobile implements IMobileAddedObservable {\n  observers: IMobileAddedObserver[] = []\n\n  position = Point.zero()\n  velocity = Point.zero()\n  speed = 1\n  direction = new Point(0, 0)\n  lifetime = 0\n  maxLifetime = Infinity\n  isLiving = true\n  attributes = new Attributes()\n  lastAttack = 0\n  isAlive = true\n  score = 0\n  fame = 0\n  enemies: MobileCollection = new MobileCollection()\n\n  onLifetimeEnd?: () => void\n  onDeath?: (mobile: Mobile) => void\n\n  constructor(\n    protected context: CanvasRenderingContext2D,\n  ) { }\n\n  update(delta: number) {\n    this.updateEssentials(delta)\n    this.afterUpdate()\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  render(_delta: number) { /** implement in child */ }\n\n  move(distance: Point) {\n    this.velocity = distance.limit(this.speed)\n    this.direction = distance\n  }\n\n  moveToMobile(target: Mobile) {\n    const distance = target.position.subtract(this.position)\n    if (distance.length() < target.attributes.size) {\n      this.stop()\n      return\n    }\n    const margin = distance.unit().multiply(target.attributes.size)\n    const dest = distance.subtract(margin)\n    this.move(dest)\n  }\n\n  stop() {\n    this.velocity = Point.zero()\n  }\n\n  attack(targets: Mobile[]): boolean {\n    if (this.lastAttack < this.attributes.attackPeriod) {\n      return false\n    }\n\n    const targetsInRange = targets.filter(t =>\n      this.attributes.range.value >= this.position.distanceTo(t.position) - t.attributes.size\n    )\n\n    if (targetsInRange.length === 0) {\n      return false\n    }\n\n    this.lastAttack = 0\n    this.direction = targets[0].position.subtract(this.position)\n    targets.forEach(target => target.damage(this.attributes.power))\n      \n    return true\n  }\n\n  attackDirection(direction: Point): boolean {\n    const attackPoint = this.position.add(direction.unit().multiply(this.attributes.range.value))\n    const targets = this.enemies.nearestMobilesInRange(attackPoint, this.attributes.range.value)\n    const result = this.attack(targets)\n    this.direction = direction.unit()\n    return result\n  }\n\n  isOpponent(mobile: Mobile): boolean {\n    return this.enemies.includes(mobile)\n  }\n\n  scoreByMobile(mobile: Mobile) {\n    this.score += mobile.fame\n  }\n\n  addObserver(observer: IMobileAddedObserver): void {\n    this.observers.push(observer)\n  }\n\n  notifyMobileAdded(mobile: Mobile): void {\n    this.observers.forEach(observer => observer.onMobileAdded(mobile))\n  }\n\n  protected checkLifetimeEnd(): boolean {\n    return this.lifetime > this.maxLifetime\n  }\n\n  protected afterUpdate() { /** implement in child */ }\n\n  private updateEssentials(delta: number) {\n    this.lifetime += delta\n    this.lastAttack += delta\n    this.position = this.position.add(this.velocity.multiply(delta / 5))\n\n    // notify when lifetime is over\n    if (this.checkLifetimeEnd()) {\n      this.onLifetimeEnd?.()\n    }\n  }\n\n  private damage(damage: number) {\n    this.attributes.hp.value -= damage\n    if (this.attributes.hp.value <= 0) {\n      this.die()\n    }\n  }\n\n  private die() {\n    this.isAlive = false\n    this.onDeath?.(this)\n  }\n}\n","import Point from \"../core/math/Point\"\n\nexport default class Sprite {\n  frameIndex = 0\n  time = 0\n  framesPerRow = 0\n  imageLoaded = false\n  loopCount = 0\n\n  constructor(\n    private image: HTMLImageElement,\n    private frameWidth: number,\n    private frameHeight: number,\n    private framesPerSecond = 60,\n    private loop = true,\n  ) {\n    this.image.onload = () => {\n      this.imageLoaded = true\n      this.framesPerRow = Math.floor(image.width / frameWidth)\n    }\n  }\n\n  update(dt: number) {\n    if (!this.checkLoop()) return\n    this.time += dt\n    while (this.time > 1000/this.framesPerSecond) {\n      this.time -= 1000/this.framesPerSecond\n      this.frameIndex++\n      if (this.frameIndex >= this.framesPerRow * Math.floor(this.image.height / this.frameHeight)) {\n        this.frameIndex = 0\n        this.loopCount++\n      }\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    direction: Point = Point.zero(),\n  ) {\n    if (!this.checkLoop()) return\n    if (!this.imageLoaded) return\n\n    const row = Math.floor(this.frameIndex / this.framesPerRow)\n    const col = this.frameIndex % this.framesPerRow\n    // sprite is facing left by default\n    const flip = direction.x < 0 ? 1 : -1\n\n    ctx.save()\n    ctx.scale(flip, 1)\n    ctx.drawImage(\n      this.image,\n      col * this.frameWidth,\n      row * this.frameHeight,\n      this.frameWidth,\n      this.frameHeight,\n      x - this.frameWidth / 2,\n      y - this.frameHeight / 2,\n      this.frameWidth,\n      this.frameHeight\n    )\n    ctx.restore()\n  }\n\n  private checkLoop(): boolean {\n    return this.loop || this.loopCount === 0\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kp27Z\")).toString();","import Mobile from \"../mobile/Mobile\"\nimport Sprite from \"../sprite/Sprite\"\nimport CatRunningSprite from \"../../../assets/images/cat-sprites-running.png\"\nimport CatIdleSprite from \"../../../assets/images/cat-sprites-idle.png\"\nimport Point from \"../core/math/Point\"\n\nenum Mode {\n  IDLE,\n  RUNNING,\n}\n\nexport default class Cat extends Mobile {\n  private sprites: Map<Mode, Sprite> = new Map()\n  private mode = Mode.IDLE\n\n  static SPRITES = [\n    { mode: Mode.IDLE, img: CatIdleSprite, width: 20, height: 15, fps: 5 },\n    { mode: Mode.RUNNING, img: CatRunningSprite, width: 22, height: 16, fps: 10 },\n  ]\n\n  constructor(\n    context: CanvasRenderingContext2D\n  ) {\n    super(context)\n\n    this.attributes.hp.max = 20\n    this.attributes.power = 5\n    this.attributes.size = 10\n    this.attributes.range.value = 50\n    this.attributes.range.max = 50\n    this.attributes.attackPeriod = 0\n\n    Cat.SPRITES.forEach(({ mode, img, width, height, fps }) => {\n      const image = new Image()\n      image.src = img\n      this.sprites.set(mode, new Sprite(image, width, height, fps))\n    })\n  }\n\n  render(delta: number) {\n    const sprite = this.sprites.get(this.mode)\n    sprite?.update(delta)\n    sprite?.draw(this.context, 0, 0, this.direction)\n  }\n\n  move(distance: Point) {\n    super.move(distance)\n    this.mode = Mode.RUNNING\n  }\n\n  stop() {\n    super.stop()\n    this.mode = Mode.IDLE\n    this.attackDirection(this.direction)\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1H4Ur\")).toString();","import Mobile from \"../mobile/Mobile\"\n\nexport default class CirclingTriangle extends Mobile {\n\n  constructor(\n    context: CanvasRenderingContext2D\n  ) {\n    super(context)\n\n    this.attributes.hp.max = 5\n    this.attributes.power = 5\n    this.attributes.size = 1\n    this.speed = .5\n    this.fame = 1\n  }\n\n  render(): void {\n    this.context.save()\n    this.context.rotate(this.direction.angle() + Math.PI / 2)\n    this.context.beginPath()\n    this.context.moveTo(0, -5)\n    this.context.lineTo(5, 5)\n    this.context.lineTo(0, 3)\n    this.context.lineTo(-5, 5)\n    this.context.lineTo(0, -5)\n    this.context.fillStyle = \"red\"\n    this.context.fill()\n    this.context.restore()\n    // attacking effect\n    if (this.lastAttack > 200) return\n    this.context.save()\n    this.context.rotate(this.direction.angle() + Math.PI / 2)\n    this.context.beginPath()\n    this.context.moveTo(0, -4)\n    this.context.lineTo(4, 4)\n    this.context.lineTo(0, 2)\n    this.context.lineTo(-4, 4)\n    this.context.lineTo(0, -4)\n    this.context.fillStyle = `rgba(255, 255, 255, ${this.lastAttack / 200})`\n    this.context.fill()\n    this.context.restore()\n  }\n\n  protected afterUpdate(): void {\n    if (this.enemies.first === undefined) return\n    this.moveToMobile(this.enemies.first)\n    this.attack([this.enemies.first])\n  }\n}\n","import Mobile from \"../mobile/Mobile\"\n\nexport default class TargetPoint extends Mobile {\n  private visible = true\n\n  constructor(\n    context: CanvasRenderingContext2D,\n    private source: Mobile,\n  ) {\n    super(context)\n    this.isLiving = false\n  }\n\n  setVisible(visible: boolean) {\n    this.visible = visible\n  }\n\n  render() {\n    if (!this.visible) {\n      return\n    }\n    const dist = this.source.position.subtract(this.position)\n    this.context.beginPath()\n    this.context.moveTo(0, 0)\n    this.context.lineTo(dist.x, dist.y)\n    this.context.strokeStyle = '#FFF'\n    this.context.setLineDash([5, 15])\n    this.context.stroke()\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7agUk\")).toString();","import Mobile from \"../mobile/Mobile\";\nimport Sprite from \"../sprite/Sprite\";\n\n\nexport default abstract class SpriteEffectBase extends Mobile {\n\n  constructor(\n    context: CanvasRenderingContext2D,\n    private sprite: Sprite\n  ) {\n    super(context)\n    this.isLiving = false\n  }\n\n  render(delta: number): void {\n    this.sprite.update(delta)\n    this.sprite.draw(this.context, 0, 0, this.direction)\n  }\n\n  protected checkLifetimeEnd(): boolean {\n    return this.sprite.loopCount > 0\n  }\n}\n","import Sprite from \"../sprite/Sprite\"\nimport EffectSprite from \"../../../assets/images/confetti-sprites.png\"\nimport SpriteEffectBase from \"./SpriteEffectBase\"\n\nexport default class ConfettiEffect extends SpriteEffectBase {\n  constructor(\n    context: CanvasRenderingContext2D\n  ) {\n    const image = new Image()\n    image.src = EffectSprite\n    const sprite = new Sprite(image, 81, 81, 10, false)\n    super(context, sprite)\n  }\n\n  render(delta: number): void {\n    this.context.save()\n    const gap = this.direction.unit().multiply(30)\n    this.context.translate(gap.x, gap.y)\n    // sprite is facing left, so rotate 90 degrees to face up\n    this.context.rotate(this.direction.angle() + Math.PI / 2)\n    super.render(delta)\n    this.context.restore()\n  }\n}\n","import Point from \"../core/math/Point\"\n\nexport default class Space {\n  width = 0\n  height = 0\n  starElapsed = 0\n  backgroundColor = \"rgb(10, 10, 10)\"\n  starColorRange = 100\n  stars: Point[] = []\n  maxStars = 400\n\n  constructor(\n    private context: CanvasRenderingContext2D\n  ) {\n  }\n\n  animate(delta: number) {\n    this.render(delta)\n  }\n\n  resize(width: number, height: number) {\n    this.width = width\n    this.height = height\n  }\n\n  private render(delta: number) {\n    this.renderBackground()\n    this.renderStars()\n\n    if (this.checkStarElapsed(delta)) {\n      this.updateStars()\n    }\n  }\n\n  private renderBackground() {\n    this.context.fillStyle = this.backgroundColor\n    this.context.fillRect(0, 0, this.width, this.height)\n  }\n\n  private renderStars() {\n    this.context.fillStyle = \"white\"\n    this.stars.forEach(star => {\n      this.context.fillRect(star.x, star.y, 1, 1)\n    })\n  }\n\n  private updateStars() {\n    this.stars = []\n    for (let i = 0; i < this.maxStars; i++) {\n      this.stars.push(new Point(\n        Math.random() * this.width,\n        Math.random() * this.height,\n      ))\n    }\n  }\n\n  private checkStarElapsed(delta: number) {\n    this.starElapsed += delta\n    if (this.starElapsed > 200) {\n      this.starElapsed = 0\n      return true\n    }\n    return false\n  }\n}\n","import Game from \"../Game\";\n\nexport default class GameLevel {\n  constructor(\n    private game: Game,\n  ) {\n  }\n\n  update(): void {\n    this.createEnemy()\n  }\n\n  private createEnemy() {\n    if (!this.game.player) return\n    if (this.game.player.enemies.length >= 10) return\n    this.game.createEnemy()\n  }\n}\n","import Cat from \"./characters/Cat\"\nimport CirclingTriangle from \"./characters/CirclingTriangle\"\nimport TargetPoint from \"./characters/TargetPoint\"\nimport Point from \"./core/math/Point\"\nimport ConfettiEffect from \"./effects/ConfettiEffect\"\nimport Mobile from \"./mobile/Mobile\"\nimport Space from \"./space/Space\"\nimport GameLevel from \"./stage/GameLevel\"\n\nexport default class Game {\n  options = {\n    showCoordinates: false,\n  }\n  width = 0\n  height = 0\n  lastTime = 0\n  delta = 0\n  paused = false\n  space?: Space = undefined\n  player?: Mobile = undefined\n  targetPoint?: TargetPoint = undefined\n  mobiles: Mobile[] = []\n  gameLevel = new GameLevel(this)\n  pausedTitle?: string = undefined\n  pausedSubtitle?: string = undefined\n\n  constructor(\n    private context: CanvasRenderingContext2D,\n  ) {\n    this.reset()\n  }\n\n  resize(width: number, height: number) {\n    this.width = width\n    this.height = height\n    this.space?.resize(width, height)\n  }\n\n  animate(delta: number) {\n    this.renderSpace()\n    this.renderInterface()\n\n    if (this.paused) {\n      this.renderPauseMessage()\n      return\n    }\n\n    this.updateDelta(delta)\n    this.updateGameLevel()\n    this.updatePlayer()\n    this.updateMobiles()\n    this.processGameOver()\n\n    this.renderMobiles()\n    this.renderPlayer()\n  }\n\n  movePlayer(x: number, y: number) {\n    if (!this.player) return\n\n    const distance = new Point(x, y)\n    this.player.move(distance)\n\n    if (!this.targetPoint) return\n\n    this.targetPoint.position = this.player.position.add(distance)\n    this.targetPoint?.setVisible(true)\n  }\n\n  stopPlayer() {\n    this.player?.stop()\n    this.targetPoint?.setVisible(false)\n    this.createCatAttackEffect()\n  }\n\n  getSummary() {\n    return `\n      Player:\n        * pos: ${this.player?.position.x}, ${this.player?.position.y}\n        * hp : ${this.player?.attributes.hp.value} / ${this.player?.attributes.hp.max}\n        * score: ${this.player?.score}\n      Mobiles: ${this.mobiles?.length}\n    `\n  }\n\n  createEnemy() {\n    const enemy = new CirclingTriangle(this.context)\n    this.mobiles.push(enemy)\n\n    if (!this.player) return\n\n    enemy.position = this.player?.position.around(Math.random() * 200 + 400)\n    enemy.enemies.add(this.player)\n    enemy.onDeath = this.scoreToPlayer.bind(this)\n    this.player?.enemies.add(enemy)\n  }\n\n  pause(title?: string, subtitle?: string) {\n    this.pausedTitle = title\n    this.pausedSubtitle = subtitle\n    this.paused = true\n  }\n\n  resume() {\n    this.paused = false\n  }\n\n  reset() {\n    this.mobiles = []\n    this.space = new Space(this.context)\n    this.space.resize(this.width, this.height)\n    this.player = new Cat(this.context)\n    this.targetPoint = new TargetPoint(this.context, this.player)\n    this.mobiles.push(this.targetPoint)\n    this.resume()\n  }\n\n  private processGameOver() {\n    if (this.player?.isAlive) return\n    this.pause(\"GAME OVER\", \"Press any key to restart\")\n  }\n\n  private updatePlayer() {\n    this.player?.update(this.delta)\n  }\n\n  private renderPlayer() {\n    this.context.save()\n    this.context.translate(this.width / 2, this.height / 2)\n    if (this.player) {\n      this.player.render(this.delta)\n      this.drawCoordinates(this.player, 20)\n    }\n    this.context.restore()\n  }\n\n  private updateMobiles() {\n    this.mobiles.forEach(mobile => mobile.update(this.delta))\n  }\n\n  private renderMobiles() {\n    const aliveMobiles = this.mobiles.filter(mobile => mobile.isAlive)\n    const axis = this.player?.position || new Point(0, 0)\n    aliveMobiles.forEach(enemy => {\n      this.context.save()\n      this.context.translate(\n        this.width / 2 - axis.x + enemy.position.x,\n        this.height / 2 - axis.y + enemy.position.y,\n      )\n      enemy.render(this.delta)\n      this.drawCoordinates(enemy, 10, 5)\n      this.context.restore()\n    })\n  }\n\n  private updateGameLevel() {\n    this.gameLevel.update()\n  }\n\n  private updateDelta(time: number) {\n    this.delta = time - this.lastTime\n    this.lastTime = time\n  }\n\n  private createCatAttackEffect() {\n    if (!this.player) return\n    const effect = new ConfettiEffect(this.context)\n    effect.position = this.player.position\n    effect.direction = this.player.direction\n    effect.onLifetimeEnd = () => {\n      this.mobiles.splice(this.mobiles.indexOf(effect), 1)\n    }\n    this.mobiles.push(effect)\n  }\n\n  private drawCoordinates(mobile: Mobile, margin: number, size = 8) {\n    if (!this.options.showCoordinates || !mobile.isLiving) {\n      return\n    }\n    this.context.fillStyle = \"white\"\n    this.context.font = `${size}px Arial`\n    const text = `${Math.round(mobile.position.x)}, ${Math.round(mobile.position.y)}`\n    const left = text.length / 4 * size\n    this.context.fillText(text, -left, margin)\n  }\n\n  private scoreToPlayer(mobile: Mobile) {\n    this.player?.scoreByMobile(mobile)\n  }\n\n  private renderSpace() {\n    if (!this.space) return\n    this.space.animate(this.delta)\n  }\n\n  private renderInterface() {\n    if (!this.player) return\n    this.context.save()\n    this.context.fillStyle = \"white\"\n    this.context.font = \"16px Courier\"\n    this.context.fillText(this.player.score.toString(), this.width / 2, 20)\n    this.context.restore()\n  }\n\n  private renderPauseMessage() {\n    if (!this.pausedTitle) return\n    this.context.save()\n    this.context.fillStyle = \"white\"\n    this.context.font = \"48px Courier\"\n    this.context.textAlign = \"center\"\n    const text = this.pausedTitle\n    this.context.fillText(text, this.width / 2, this.height / 2)\n    this.context.restore()\n    if (!this.pausedSubtitle) return\n    this.context.save()\n    this.context.fillStyle = \"white\"\n    this.context.font = \"16px Courier\"\n    this.context.textAlign = \"center\"\n    const subtitle = this.pausedSubtitle\n    this.context.fillText(subtitle, this.width / 2, this.height / 2 + 48)\n    this.context.restore()\n  }\n}\n","import Point from \"./game/core/math/Point\"\nimport Game from \"./game/Game\"\n\nexport class App {\n  canvas: HTMLCanvasElement\n  context: CanvasRenderingContext2D\n  game: Game\n  width = 0\n  height = 0\n  isControllingPlayer = false\n  keys: string[] = []\n\n  constructor() {\n    this.canvas = document.createElement(\"canvas\")\n    const context = this.canvas.getContext(\"2d\")\n    if (!context) {\n      throw new Error(\"Could not get canvas context\")\n    }\n    this.context = context\n    this.game = new Game(this.context)\n  }\n\n  start() {\n    document.body.appendChild(this.canvas)\n    window.addEventListener(\"resize\", this.resize.bind(this))\n    this.registerCanvasEvents()\n    this.resize()\n    this.animate()\n  }\n\n  enableDebugMode(): App {\n    this.game.options.showCoordinates = true\n    setInterval(() => {\n      console.log(this.game.getSummary())\n    }, 3000)\n    return this\n  }\n\n  private animate(delta = 0) {\n    this.game.animate(delta)\n    requestAnimationFrame(this.animate.bind(this))\n  }\n\n  private resize() {\n    this.width = document.body.clientWidth\n    this.height = document.body.clientHeight\n    this.canvas.width = this.width\n    this.canvas.height = this.height\n\n    this.game.resize(this.width, this.height)\n  }\n\n  private registerCanvasEvents() {\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown.bind(this))\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove.bind(this))\n    this.canvas.addEventListener(\"mouseup\", this.onTouchEnd.bind(this))\n    this.canvas.addEventListener(\"touchstart\", this.onTouchStart.bind(this))\n    this.canvas.addEventListener(\"touchmove\", this.onTouchStart.bind(this))\n    this.canvas.addEventListener(\"touchend\", this.onTouchEnd.bind(this))\n    document.addEventListener(\"keydown\", this.onKeyDown.bind(this))\n    document.addEventListener(\"keyup\", this.onKeyUp.bind(this))\n  }\n\n  private movePlayer(x: number, y: number) {\n    if (this.game.player?.isAlive === false && !this.isControllingPlayer) {\n      this.game.reset()\n    }\n    this.isControllingPlayer = true\n    this.game.movePlayer(x, y)\n  }\n\n  private endMovePlayer() {\n    this.isControllingPlayer = false\n    this.game.stopPlayer()\n  }\n\n  private onMouseDown(event: MouseEvent) {\n    this.movePlayer(\n      ...this.calculateDistanceFromCenter(event.clientX, event.clientY)\n    )\n  }\n\n  private onMouseMove(event: MouseEvent) {\n    if (event.buttons === 0)\n      return\n    this.movePlayer(\n      ...this.calculateDistanceFromCenter(event.clientX, event.clientY)\n    )\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    this.movePlayer(\n      ...this.calculateDistanceFromCenter(event.touches[0].clientX, event.touches[0].clientY)\n    )\n  }\n\n  private onTouchEnd() {\n    this.endMovePlayer()\n  }\n\n  private calculateDistanceFromCenter(x: number, y: number): [number, number] {\n    const center = new Point(this.width / 2, this.height / 2)\n    const point = new Point(x, y)\n    const distance = point.subtract(center)\n    return [distance.x, distance.y]\n  }\n\n  private onKeyDown(event: KeyboardEvent) {\n    if (!(event.key in App.KEY_TO_DIRECTION)) {\n      return\n    }\n    if (this.keys.includes(event.key)) {\n      return\n    }\n    this.keys.push(event.key)\n    this.updateKeys()\n  }\n\n  private onKeyUp(event: KeyboardEvent) {\n    if (!(event.key in App.KEY_TO_DIRECTION)) {\n      return\n    }\n    this.keys = this.keys.filter(key => key !== event.key)\n    this.updateKeys()\n  }\n\n  private updateKeys() {\n    if (this.keys.length === 0) {\n      this.endMovePlayer()\n      return\n    }\n    const sum = this.keys.reduce((sum, key) => {\n      return [sum[0] + App.KEY_TO_DIRECTION[key][0], sum[1] + App.KEY_TO_DIRECTION[key][1]]\n    }, [0, 0])\n    this.movePlayer(sum[0], sum[1])\n  }\n\n  static KEY_TO_DIRECTION: { [key: string]: [number, number] } = {\n    \"w\": [0, -1],\n    \"a\": [-1, 0],\n    \"s\": [0, 1],\n    \"d\": [1, 0],\n    \"ArrowUp\": [0, -1],\n    \"ArrowLeft\": [-1, 0],\n    \"ArrowDown\": [0, 1],\n    \"ArrowRight\": [1, 0],\n  }\n}\n\nnew App().enableDebugMode().start()\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$43bfe6294afb6043$export$2e2bcd8739ae039","constructor","x","y","this","static","add","point","subtract","unit","zero","Math","sqrt","multiply","scalar","angle","atan2","distanceTo","limit","max","around","distance","random","PI","cos","sin","$6bfbb6c15128e9b5$export$2e2bcd8739ae039","hp","$6bfbb6c15128e9b5$var$NumericAttribute","of","size","power","range","attackPeriod","damage","source","value","_value","_max","min","$e17df336da1b3802$export$2e2bcd8739ae039","collection","filter","mobile","isAlive","first","includes","push","nearestMobilesInRange","position","$73c3f5d8867f376c$export$2e2bcd8739ae039","context","observers","velocity","speed","direction","lifetime","maxLifetime","Infinity","isLiving","attributes","lastAttack","score","fame","enemies","update","delta","updateEssentials","afterUpdate","render","_delta","move","moveToMobile","target","stop","margin","dest","attack","targets","t","forEach","attackDirection","attackPoint","result","isOpponent","scoreByMobile","addObserver","observer","notifyMobileAdded","onMobileAdded","checkLifetimeEnd","onLifetimeEnd","die","onDeath","$da5fc1c35aff1e0d$export$2e2bcd8739ae039","image","frameWidth","frameHeight","framesPerSecond","loop","frameIndex","time","framesPerRow","imageLoaded","loopCount","onload","floor","width","dt","checkLoop","height","draw","ctx","row","col","flip","save","scale","drawImage","restore","$e2c9dcac0f02a629$exports","URL","resolve","import","meta","url","toString","$85c94ce00cb2a82b$var$Mode","Mode","$7357178c6a7828df$exports","$85c94ce00cb2a82b$export$2e2bcd8739ae039","sprites","Map","mode","IDLE","img","$parcel$interopDefault","fps","RUNNING","super","SPRITES","Image","src","set","sprite","get","$1680c37e97ccc699$export$2e2bcd8739ae039","rotate","beginPath","moveTo","lineTo","fillStyle","fill","undefined","$593fdb6cc61fd03e$export$2e2bcd8739ae039","visible","setVisible","dist","strokeStyle","setLineDash","stroke","$1d5b3938f41b967b$exports","$1f66de5e70c11fdb$export$2e2bcd8739ae039","$8f889751dfd7c577$export$2e2bcd8739ae039","gap","translate","$f8daf18d7ca6e6d0$export$2e2bcd8739ae039","starElapsed","backgroundColor","starColorRange","stars","maxStars","animate","resize","renderBackground","renderStars","checkStarElapsed","updateStars","fillRect","star","$2db6e0bd5690816b$export$2e2bcd8739ae039","game","createEnemy","player","$1d65543a723a8bec$export$2e2bcd8739ae039","options","showCoordinates","lastTime","paused","space","targetPoint","mobiles","gameLevel","pausedTitle","pausedSubtitle","reset","renderSpace","renderInterface","renderPauseMessage","updateDelta","updateGameLevel","updatePlayer","updateMobiles","processGameOver","renderMobiles","renderPlayer","movePlayer","stopPlayer","createCatAttackEffect","getSummary","enemy","scoreToPlayer","bind","pause","title","subtitle","resume","drawCoordinates","aliveMobiles","axis","effect","splice","indexOf","font","text","round","left","fillText","textAlign","$2ae89aad8d89d959$export$86fbec116b87613f","isControllingPlayer","canvas","document","createElement","getContext","start","body","appendChild","window","addEventListener","registerCanvasEvents","enableDebugMode","setInterval","console","log","requestAnimationFrame","clientWidth","clientHeight","onMouseDown","onMouseMove","onTouchEnd","onTouchStart","onKeyDown","onKeyUp","endMovePlayer","event","calculateDistanceFromCenter","clientX","clientY","buttons","touches","center","key","KEY_TO_DIRECTION","updateKeys","sum","reduce","w","a","s","d","ArrowUp","ArrowLeft","ArrowDown","ArrowRight"],"version":3,"file":"index.6f24c07b.js.map"}