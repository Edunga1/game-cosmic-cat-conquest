{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-ce1794912f3f60bc.js","src/game/core/Point.ts","src/game/mobile/Mobile.ts","src/game/sprite/Sprite.ts","node_modules/@parcel/runtime-js/lib/runtime-d99662e4b0933e94.js","src/game/characters/Cat.ts","src/game/characters/CirclingTriangle.ts","src/game/space/Space.ts","src/game/Game.ts","src/App.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"67Pf5\\\":\\\"index.163a30f6.js\\\",\\\"kp27Z\\\":\\\"cat-sprites-running.47e835c7.png\\\"}\"));","export default class Point {\n    constructor(\n        public x: number,\n        public y: number\n    ) {\n        this.x = x\n        this.y = y\n    }\n\n    static zero() {\n        return new Point(0, 0)\n    }\n\n    add(point: Point) {\n        return new Point(this.x + point.x, this.y + point.y)\n    }\n\n    subtract(point: Point) {\n        return new Point(this.x - point.x, this.y - point.y)\n    }\n\n    unit() {\n        const length = this.length()\n        return new Point(this.x / length, this.y / length)\n    }\n\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y)\n    }\n\n    multiply(scalar: number) {\n        return new Point(this.x * scalar, this.y * scalar)\n    }\n}\n\n","import Point from \"../core/Point\"\n\nexport default abstract class Mobile {\n    position = Point.zero()\n    velocity = Point.zero()\n    elapsed = 0\n\n    constructor(\n        protected context: CanvasRenderingContext2D\n    ) {\n    }\n\n    animate(delta: number) {\n        this.update(delta)\n        this.render(delta)\n    }\n\n    private update(delta: number) {\n        this.elapsed += delta\n        this.position = this.position.add(this.velocity.multiply(delta / 5))\n    }\n\n    protected abstract render(delta: number): void\n}\n\n","export default class Sprite {\n  frameIndex = 0\n  time = 0\n  framesPerRow: number\n  imageLoaded = false\n\n  constructor(\n    private image: HTMLImageElement,\n    private frameWidth: number,\n    private frameHeight: number,\n    private framesPerSecond = 60,\n  ) {\n    this.image.onload = () => {\n      this.imageLoaded = true\n      this.framesPerRow = Math.floor(image.width / frameWidth)\n    }\n  }\n\n  update(dt: number) {\n    this.time += dt\n    while (this.time > 1000/this.framesPerSecond) {\n      this.time -= 1000/this.framesPerSecond\n      this.frameIndex++\n      if (this.frameIndex >= this.framesPerRow * Math.floor(this.image.height / this.frameHeight)) {\n        this.frameIndex = 0\n      }\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n  ) {\n    if (!this.imageLoaded) return\n\n    const row = Math.floor(this.frameIndex / this.framesPerRow)\n    const col = this.frameIndex % this.framesPerRow\n    ctx.drawImage(\n      this.image,\n      col * this.frameWidth,\n      row * this.frameHeight,\n      this.frameWidth,\n      this.frameHeight,\n      x,\n      y,\n      this.frameWidth,\n      this.frameHeight\n    )\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kp27Z\")).toString();","import Mobile from \"../mobile/Mobile\"\nimport Sprite from \"../sprite/Sprite\"\nimport CatSprite from \"../../../assets/images/cat-sprites-running.png\"\n\n\nexport default class Cat extends Mobile {\n  sprite: Sprite\n\n  constructor(\n    context: CanvasRenderingContext2D\n  ) {\n    super(context)\n\n    const image = new Image()\n    image.src = CatSprite\n    this.sprite = new Sprite(image, 22, 16, 10)\n  }\n\n  render(delta: number) {\n    this.sprite.update(delta)\n    this.sprite.draw(this.context, 0, 0)\n  }\n}\n","import Mobile from \"../mobile/Mobile\"\nimport Sprite from \"../sprite/Sprite\"\n\nexport default class CirclingTriangle extends Mobile {\n  sprite: Sprite\n\n  constructor(\n    context: CanvasRenderingContext2D\n  ) {\n    super(context)\n  }\n\n  render() {\n    this.context.save()\n    this.context.rotate(this.elapsed / 1000)\n    this.context.beginPath()\n    this.context.moveTo(0, -5)\n    this.context.lineTo(5, 5)\n    this.context.lineTo(0, 3)\n    this.context.lineTo(-5, 5)\n    this.context.lineTo(0, -5)\n    this.context.fillStyle = \"red\"\n    this.context.fill()\n    this.context.restore()\n  }\n}\n","import Point from \"../core/Point\"\n\nexport default class Space {\n    width: number\n    height: number\n    starElapsed = 0\n    backgroundColor = \"rgb(10, 10, 10)\"\n    starColorRange = 100\n    stars: Point[] = []\n    maxStars = 400\n\n    constructor(\n        private context: CanvasRenderingContext2D\n    ) {\n    }\n\n    animate(delta: number) {\n        this.render(delta)\n    }\n\n    private render(delta: number) {\n        this.renderBackground()\n        this.renderStars()\n\n        if (this.checkStarElapsed(delta)) {\n            this.updateStars()\n        }\n    }\n\n    private renderBackground() {\n        this.context.fillStyle = this.backgroundColor\n        this.context.fillRect(0, 0, this.width, this.height)\n    }\n\n    private renderStars() {\n        this.context.fillStyle = \"white\"\n        this.stars.forEach(star => {\n            this.context.fillRect(star.x, star.y, 1, 1)\n        })\n    }\n\n    private updateStars() {\n        this.stars = []\n        for (let i = 0; i < this.maxStars; i++) {\n            this.stars.push(new Point(\n                Math.random() * this.width,\n                Math.random() * this.height,\n            ))\n        }\n    }\n\n    private checkStarElapsed(delta: number) {\n        this.starElapsed += delta\n        if (this.starElapsed > 200) {\n            this.starElapsed = 0\n            return true\n        }\n        return false\n    }\n}\n","import Cat from \"./characters/Cat\"\nimport CirclingTriangle from \"./characters/CirclingTriangle\"\nimport Point from \"./core/Point\"\nimport Mobile from \"./mobile/Mobile\"\nimport Space from \"./space/Space\"\n\nexport default class Game {\n  width = 0\n  height = 0\n  lastTime = 0\n  delta = 0\n  space: Space\n  player: Cat\n  enemies: Mobile[] = []\n\n  constructor(\n    private context: CanvasRenderingContext2D,\n  ) {\n    this.space = new Space(context)\n    this.player = new Cat(context)\n\n    for (let i = 0; i < 10; i++) {\n      const enemy = new CirclingTriangle(context)\n      enemy.position.x = Math.random() * 1000 - 500\n      enemy.position.y = Math.random() * 1000 - 500\n      this.enemies.push(enemy)\n    }\n  }\n\n  resize(width: number, height: number) {\n    this.width = width\n    this.height = height\n    this.space.width = width\n    this.space.height = height\n  }\n\n  animate(time: number) {\n    this.updateDelta(time)\n    this.space.animate(this.delta)\n    this.updatePlayer()\n    this.updateEnemies()\n    this.context.restore()\n  }\n\n  movePlayer(x: number, y: number) {\n    const point = new Point(x, y)\n    const center = new Point(this.width / 2, this.height / 2)\n    const distance = center.subtract(point).unit()\n    this.player.velocity = distance\n  }\n\n  stopPlayer() {\n    this.player.velocity = Point.zero()\n  }\n\n  private updatePlayer() {\n    this.context.save()\n    this.context.translate(this.width / 2, this.height / 2)\n    this.player.animate(this.delta)\n    this.context.restore()\n  }\n\n  private updateEnemies() {\n    this.enemies.forEach(enemy => {\n      this.context.save()\n      this.context.translate(\n        this.width / 2 + this.player.position.x + enemy.position.x,\n        this.height / 2 + this.player.position.y + enemy.position.y,\n      )\n      enemy.animate(this.delta)\n      this.context.restore()\n    })\n  }\n\n  private updateDelta(time: number) {\n    this.delta = time - this.lastTime\n    this.lastTime = time\n  }\n}\n","import Game from \"./game/Game\"\n\nexport class App {\n    canvas: HTMLCanvasElement\n    context: CanvasRenderingContext2D\n    game: Game\n    width: number\n    height: number\n\n    constructor() {\n        this.canvas = document.createElement(\"canvas\")\n        this.context = this.canvas.getContext(\"2d\")!\n        this.game = new Game(this.context)\n    }\n\n    start() {\n        document.body.appendChild(this.canvas)\n        window.addEventListener(\"resize\", this.resize.bind(this))\n        this.registerCanvasEvents()\n        this.resize()\n        this.animate()\n    }\n\n    private animate(time = 0) {\n        this.game.animate(time)\n\n        requestAnimationFrame(this.animate.bind(this))\n    }\n\n    private resize() {\n        this.width = document.body.clientWidth\n        this.height = document.body.clientHeight\n        this.canvas.width = this.width\n        this.canvas.height = this.height\n\n        this.game.resize(this.width, this.height)\n    }\n\n    private registerCanvasEvents() {\n        this.canvas.addEventListener(\"mousedown\", this.onMouseDown.bind(this))\n        this.canvas.addEventListener(\"mousemove\", this.onMouseMove.bind(this))\n        this.canvas.addEventListener(\"mouseup\", this.onTouchEnd.bind(this))\n        this.canvas.addEventListener(\"touchstart\", this.onTouchStart.bind(this))\n        this.canvas.addEventListener(\"touchend\", this.onTouchEnd.bind(this))\n    }\n\n    private onMouseDown(event: MouseEvent) {\n        this.game.movePlayer(event.clientX, event.clientY)\n    }\n\n    private onMouseMove(event: MouseEvent) {\n        if (event.buttons === 0)\n            return\n        this.game.movePlayer(event.clientX, event.clientY)\n    }\n\n    private onTouchStart(event: TouchEvent) {\n        this.game.movePlayer(event.touches[0].clientX, event.touches[0].clientY)\n    }\n\n    private onTouchEnd() {\n        this.game.stopPlayer()\n    }\n}\n\nnew App().start()\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$1162b4d1b63bcb0b$export$2e2bcd8739ae039","constructor","x","y","this","static","add","point","subtract","unit","Math","sqrt","multiply","scalar","$73c3f5d8867f376c$export$2e2bcd8739ae039","context","position","zero","velocity","elapsed","animate","delta","update","render","$da5fc1c35aff1e0d$export$2e2bcd8739ae039","image","frameWidth","frameHeight","framesPerSecond","frameIndex","time","imageLoaded","onload","framesPerRow","floor","width","dt","height","draw","ctx","row","col","drawImage","$e2c9dcac0f02a629$exports","URL","resolve","import","meta","url","toString","$85c94ce00cb2a82b$export$2e2bcd8739ae039","super","Image","src","$parcel$interopDefault","sprite","$1680c37e97ccc699$export$2e2bcd8739ae039","save","rotate","beginPath","moveTo","lineTo","fillStyle","fill","restore","$f8daf18d7ca6e6d0$export$2e2bcd8739ae039","starElapsed","backgroundColor","starColorRange","stars","maxStars","renderBackground","renderStars","checkStarElapsed","updateStars","fillRect","forEach","star","push","random","$1d65543a723a8bec$export$2e2bcd8739ae039","lastTime","enemies","space","player","enemy","resize","updateDelta","updatePlayer","updateEnemies","movePlayer","distance","stopPlayer","translate","canvas","document","createElement","getContext","game","start","body","appendChild","window","addEventListener","bind","registerCanvasEvents","requestAnimationFrame","clientWidth","clientHeight","onMouseDown","onMouseMove","onTouchEnd","onTouchStart","event","clientX","clientY","buttons","touches"],"version":3,"file":"index.163a30f6.js.map"}