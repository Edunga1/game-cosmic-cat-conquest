{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-ce1794912f3f60bc.js","src/game/core/Point.ts","src/game/mobile/Mobile.ts","src/game/sprite/Sprite.ts","node_modules/@parcel/runtime-js/lib/runtime-d99662e4b0933e94.js","src/game/characters/Cat.ts","src/game/characters/CirclingTriangle.ts","src/game/space/Space.ts","src/game/Game.ts","src/App.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"67Pf5\\\":\\\"index.b6f1ecb5.js\\\",\\\"kp27Z\\\":\\\"cat-sprites-running.47e835c7.png\\\"}\"));","export default class Point {\n    constructor(\n        public x: number,\n        public y: number\n    ) {\n        this.x = x\n        this.y = y\n    }\n\n    static zero() {\n        return new Point(0, 0)\n    }\n\n    add(point: Point) {\n        return new Point(this.x + point.x, this.y + point.y)\n    }\n\n    subtract(point: Point) {\n        return new Point(this.x - point.x, this.y - point.y)\n    }\n\n    unit() {\n        const length = this.length()\n        return new Point(this.x / length, this.y / length)\n    }\n\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y)\n    }\n\n    multiply(scalar: number) {\n        return new Point(this.x * scalar, this.y * scalar)\n    }\n\n    angle() {\n        return Math.atan2(this.y, this.x)\n    }\n}\n\n","import Point from \"../core/Point\"\n\nexport default abstract class Mobile {\n    position = Point.zero()\n    velocity = Point.zero()\n    direction = new Point(0, 0)\n    elapsed = 0\n\n    constructor(\n        protected context: CanvasRenderingContext2D\n    ) {\n    }\n\n    animate(delta: number) {\n        this.update(delta)\n        this.render(delta)\n    }\n\n    move(distance: Point) {\n        this.velocity = distance.unit()\n        this.direction = distance\n    }\n\n    private update(delta: number) {\n        this.elapsed += delta\n        this.position = this.position.add(this.velocity.multiply(delta / 5))\n    }\n\n    protected abstract render(delta: number): void\n}\n\n","import Point from \"../core/Point\"\n\nexport default class Sprite {\n  frameIndex = 0\n  time = 0\n  framesPerRow: number\n  imageLoaded = false\n\n  constructor(\n    private image: HTMLImageElement,\n    private frameWidth: number,\n    private frameHeight: number,\n    private framesPerSecond = 60,\n  ) {\n    this.image.onload = () => {\n      this.imageLoaded = true\n      this.framesPerRow = Math.floor(image.width / frameWidth)\n    }\n  }\n\n  update(dt: number) {\n    this.time += dt\n    while (this.time > 1000/this.framesPerSecond) {\n      this.time -= 1000/this.framesPerSecond\n      this.frameIndex++\n      if (this.frameIndex >= this.framesPerRow * Math.floor(this.image.height / this.frameHeight)) {\n        this.frameIndex = 0\n      }\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    direction: Point = Point.zero(),\n  ) {\n    if (!this.imageLoaded) return\n\n    const row = Math.floor(this.frameIndex / this.framesPerRow)\n    const col = this.frameIndex % this.framesPerRow\n    let angle = direction.angle()\n\n    ctx.save()\n\n    // Flip the sprite if the direction is left\n    if (direction.x < 0) {\n      ctx.scale(-1, 1)\n      angle = Math.PI - angle\n    }\n\n    ctx.rotate(angle)\n    ctx.drawImage(\n      this.image,\n      col * this.frameWidth,\n      row * this.frameHeight,\n      this.frameWidth,\n      this.frameHeight,\n      x - this.frameWidth / 2,\n      y - this.frameHeight / 2,\n      this.frameWidth,\n      this.frameHeight\n    )\n\n    ctx.restore()\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kp27Z\")).toString();","import Mobile from \"../mobile/Mobile\"\nimport Sprite from \"../sprite/Sprite\"\nimport CatSprite from \"../../../assets/images/cat-sprites-running.png\"\n\n\nexport default class Cat extends Mobile {\n  sprite: Sprite\n\n  constructor(\n    context: CanvasRenderingContext2D\n  ) {\n    super(context)\n\n    const image = new Image()\n    image.src = CatSprite\n    this.sprite = new Sprite(image, 22, 16, 10)\n  }\n\n  render(delta: number) {\n    this.sprite.update(delta)\n    this.sprite.draw(this.context, 0, 0, this.direction)\n  }\n}\n","import Mobile from \"../mobile/Mobile\"\nimport Sprite from \"../sprite/Sprite\"\n\nexport default class CirclingTriangle extends Mobile {\n  sprite: Sprite\n\n  constructor(\n    context: CanvasRenderingContext2D\n  ) {\n    super(context)\n  }\n\n  render() {\n    this.context.save()\n    this.context.rotate(this.elapsed / 1000)\n    this.context.beginPath()\n    this.context.moveTo(0, -5)\n    this.context.lineTo(5, 5)\n    this.context.lineTo(0, 3)\n    this.context.lineTo(-5, 5)\n    this.context.lineTo(0, -5)\n    this.context.fillStyle = \"red\"\n    this.context.fill()\n    this.context.restore()\n  }\n}\n","import Point from \"../core/Point\"\n\nexport default class Space {\n    width: number\n    height: number\n    starElapsed = 0\n    backgroundColor = \"rgb(10, 10, 10)\"\n    starColorRange = 100\n    stars: Point[] = []\n    maxStars = 400\n\n    constructor(\n        private context: CanvasRenderingContext2D\n    ) {\n    }\n\n    animate(delta: number) {\n        this.render(delta)\n    }\n\n    private render(delta: number) {\n        this.renderBackground()\n        this.renderStars()\n\n        if (this.checkStarElapsed(delta)) {\n            this.updateStars()\n        }\n    }\n\n    private renderBackground() {\n        this.context.fillStyle = this.backgroundColor\n        this.context.fillRect(0, 0, this.width, this.height)\n    }\n\n    private renderStars() {\n        this.context.fillStyle = \"white\"\n        this.stars.forEach(star => {\n            this.context.fillRect(star.x, star.y, 1, 1)\n        })\n    }\n\n    private updateStars() {\n        this.stars = []\n        for (let i = 0; i < this.maxStars; i++) {\n            this.stars.push(new Point(\n                Math.random() * this.width,\n                Math.random() * this.height,\n            ))\n        }\n    }\n\n    private checkStarElapsed(delta: number) {\n        this.starElapsed += delta\n        if (this.starElapsed > 200) {\n            this.starElapsed = 0\n            return true\n        }\n        return false\n    }\n}\n","import Cat from \"./characters/Cat\"\nimport CirclingTriangle from \"./characters/CirclingTriangle\"\nimport Point from \"./core/Point\"\nimport Mobile from \"./mobile/Mobile\"\nimport Space from \"./space/Space\"\n\nexport default class Game {\n  width = 0\n  height = 0\n  lastTime = 0\n  delta = 0\n  space: Space\n  player: Cat\n  enemies: Mobile[] = []\n\n  constructor(\n    private context: CanvasRenderingContext2D,\n  ) {\n    this.space = new Space(context)\n    this.player = new Cat(context)\n\n    for (let i = 0; i < 10; i++) {\n      const enemy = new CirclingTriangle(context)\n      enemy.position.x = Math.random() * 1000 - 500\n      enemy.position.y = Math.random() * 1000 - 500\n      this.enemies.push(enemy)\n    }\n  }\n\n  resize(width: number, height: number) {\n    this.width = width\n    this.height = height\n    this.space.width = width\n    this.space.height = height\n  }\n\n  animate(time: number) {\n    this.updateDelta(time)\n    this.space.animate(this.delta)\n    this.updatePlayer()\n    this.updateEnemies()\n    this.context.restore()\n  }\n\n  movePlayer(x: number, y: number) {\n    const point = new Point(x, y)\n    const center = new Point(this.width / 2, this.height / 2)\n    const distance = center.subtract(point)\n    this.player.move(distance)\n  }\n\n  stopPlayer() {\n    this.player.velocity = Point.zero()\n  }\n\n  private updatePlayer() {\n    this.context.save()\n    this.context.translate(this.width / 2, this.height / 2)\n    this.player.animate(this.delta)\n    this.context.restore()\n  }\n\n  private updateEnemies() {\n    this.enemies.forEach(enemy => {\n      this.context.save()\n      this.context.translate(\n        this.width / 2 + this.player.position.x + enemy.position.x,\n        this.height / 2 + this.player.position.y + enemy.position.y,\n      )\n      enemy.animate(this.delta)\n      this.context.restore()\n    })\n  }\n\n  private updateDelta(time: number) {\n    this.delta = time - this.lastTime\n    this.lastTime = time\n  }\n}\n","import Game from \"./game/Game\"\n\nexport class App {\n    canvas: HTMLCanvasElement\n    context: CanvasRenderingContext2D\n    game: Game\n    width: number\n    height: number\n\n    constructor() {\n        this.canvas = document.createElement(\"canvas\")\n        this.context = this.canvas.getContext(\"2d\")!\n        this.game = new Game(this.context)\n    }\n\n    start() {\n        document.body.appendChild(this.canvas)\n        window.addEventListener(\"resize\", this.resize.bind(this))\n        this.registerCanvasEvents()\n        this.resize()\n        this.animate()\n    }\n\n    private animate(time = 0) {\n        this.game.animate(time)\n\n        requestAnimationFrame(this.animate.bind(this))\n    }\n\n    private resize() {\n        this.width = document.body.clientWidth\n        this.height = document.body.clientHeight\n        this.canvas.width = this.width\n        this.canvas.height = this.height\n\n        this.game.resize(this.width, this.height)\n    }\n\n    private registerCanvasEvents() {\n        this.canvas.addEventListener(\"mousedown\", this.onMouseDown.bind(this))\n        this.canvas.addEventListener(\"mousemove\", this.onMouseMove.bind(this))\n        this.canvas.addEventListener(\"mouseup\", this.onTouchEnd.bind(this))\n        this.canvas.addEventListener(\"touchstart\", this.onTouchStart.bind(this))\n        this.canvas.addEventListener(\"touchend\", this.onTouchEnd.bind(this))\n    }\n\n    private onMouseDown(event: MouseEvent) {\n        this.game.movePlayer(event.clientX, event.clientY)\n    }\n\n    private onMouseMove(event: MouseEvent) {\n        if (event.buttons === 0)\n            return\n        this.game.movePlayer(event.clientX, event.clientY)\n    }\n\n    private onTouchStart(event: TouchEvent) {\n        this.game.movePlayer(event.touches[0].clientX, event.touches[0].clientY)\n    }\n\n    private onTouchEnd() {\n        this.game.stopPlayer()\n    }\n}\n\nnew App().start()\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$1162b4d1b63bcb0b$export$2e2bcd8739ae039","constructor","x","y","this","static","add","point","subtract","unit","Math","sqrt","multiply","scalar","angle","atan2","$73c3f5d8867f376c$export$2e2bcd8739ae039","context","position","zero","velocity","direction","elapsed","animate","delta","update","render","move","distance","$da5fc1c35aff1e0d$export$2e2bcd8739ae039","image","frameWidth","frameHeight","framesPerSecond","frameIndex","time","imageLoaded","onload","framesPerRow","floor","width","dt","height","draw","ctx","row","col","save","scale","PI","rotate","drawImage","restore","$e2c9dcac0f02a629$exports","URL","resolve","import","meta","url","toString","$85c94ce00cb2a82b$export$2e2bcd8739ae039","super","Image","src","$parcel$interopDefault","sprite","$1680c37e97ccc699$export$2e2bcd8739ae039","beginPath","moveTo","lineTo","fillStyle","fill","$f8daf18d7ca6e6d0$export$2e2bcd8739ae039","starElapsed","backgroundColor","starColorRange","stars","maxStars","renderBackground","renderStars","checkStarElapsed","updateStars","fillRect","forEach","star","push","random","$1d65543a723a8bec$export$2e2bcd8739ae039","lastTime","enemies","space","player","enemy","resize","updateDelta","updatePlayer","updateEnemies","movePlayer","stopPlayer","translate","canvas","document","createElement","getContext","game","start","body","appendChild","window","addEventListener","bind","registerCanvasEvents","requestAnimationFrame","clientWidth","clientHeight","onMouseDown","onMouseMove","onTouchEnd","onTouchStart","event","clientX","clientY","buttons","touches"],"version":3,"file":"index.b6f1ecb5.js.map"}