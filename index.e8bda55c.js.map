{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-dec24c3a21c15404.js","src/game/core/Point.ts","src/game/mobile/Mobile.ts","src/game/sprite/Sprite.ts","node_modules/@parcel/runtime-js/lib/runtime-d99662e4b0933e94.js","src/game/characters/Cat.ts","node_modules/@parcel/runtime-js/lib/runtime-54656b7000d933e5.js","src/game/characters/CirclingTriangle.ts","src/game/characters/TargetPoint.ts","src/game/space/Space.ts","src/game/Game.ts","src/App.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"67Pf5\\\":\\\"index.e8bda55c.js\\\",\\\"kp27Z\\\":\\\"cat-sprites-running.47e835c7.png\\\",\\\"1H4Ur\\\":\\\"cat-sprites-idle.8767d413.png\\\"}\"));","export default class Point {\n  constructor(\n    public x: number,\n    public y: number\n  ) {\n    this.x = x\n    this.y = y\n  }\n\n  static zero() {\n    return new Point(0, 0)\n  }\n\n  add(point: Point) {\n    return new Point(this.x + point.x, this.y + point.y)\n  }\n\n  subtract(point: Point) {\n    return new Point(this.x - point.x, this.y - point.y)\n  }\n\n  unit() {\n    const length = this.length()\n    if (length === 0) {\n      return Point.zero()\n    }\n    return new Point(this.x / length, this.y / length)\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  multiply(scalar: number) {\n    return new Point(this.x * scalar, this.y * scalar)\n  }\n\n  angle() {\n    return Math.atan2(this.y, this.x)\n  }\n}\n\n","import Point from \"../core/Point\"\n\nexport default abstract class Mobile {\n  position = Point.zero()\n  velocity = Point.zero()\n  direction = new Point(0, 0)\n  lifetime = 0\n\n  constructor(\n    protected context: CanvasRenderingContext2D\n  ) {\n  }\n\n  animate(delta: number) {\n    this.update(delta)\n    this.render(delta)\n  }\n\n  move(distance: Point) {\n    this.velocity = distance.unit()\n    this.direction = distance\n  }\n\n  moveTo(position: Point) {\n    this.position = position\n  }\n\n  stop() {\n    this.velocity = Point.zero()\n  }\n\n  private update(delta: number) {\n    this.lifetime += delta\n    this.position = this.position.add(this.velocity.multiply(delta / 5))\n  }\n\n  protected abstract render(delta: number): void\n}\n","import Point from \"../core/Point\"\n\nexport default class Sprite {\n  frameIndex = 0\n  time = 0\n  framesPerRow: number\n  imageLoaded = false\n\n  constructor(\n    private image: HTMLImageElement,\n    private frameWidth: number,\n    private frameHeight: number,\n    private framesPerSecond = 60,\n  ) {\n    this.image.onload = () => {\n      this.imageLoaded = true\n      this.framesPerRow = Math.floor(image.width / frameWidth)\n    }\n  }\n\n  update(dt: number) {\n    this.time += dt\n    while (this.time > 1000/this.framesPerSecond) {\n      this.time -= 1000/this.framesPerSecond\n      this.frameIndex++\n      if (this.frameIndex >= this.framesPerRow * Math.floor(this.image.height / this.frameHeight)) {\n        this.frameIndex = 0\n      }\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    direction: Point = Point.zero(),\n  ) {\n    if (!this.imageLoaded) return\n\n    const row = Math.floor(this.frameIndex / this.framesPerRow)\n    const col = this.frameIndex % this.framesPerRow\n    // sprite is facing left by default\n    const flip = direction.x < 0 ? 1 : -1\n\n    ctx.save()\n    ctx.scale(flip, 1)\n    ctx.drawImage(\n      this.image,\n      col * this.frameWidth,\n      row * this.frameHeight,\n      this.frameWidth,\n      this.frameHeight,\n      x - this.frameWidth / 2,\n      y - this.frameHeight / 2,\n      this.frameWidth,\n      this.frameHeight\n    )\n    ctx.restore()\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kp27Z\")).toString();","import Mobile from \"../mobile/Mobile\"\nimport Sprite from \"../sprite/Sprite\"\nimport CatRunningSprite from \"../../../assets/images/cat-sprites-running.png\"\nimport CatIdleSprite from \"../../../assets/images/cat-sprites-idle.png\"\nimport Point from \"../core/Point\"\n\nenum Mode {\n  IDLE,\n  RUNNING,\n}\n\nexport default class Cat extends Mobile {\n  private sprites: Map<Mode, Sprite> = new Map()\n  private mode = Mode.IDLE\n\n  static SPRITES = [\n    { mode: Mode.IDLE, img: CatIdleSprite, width: 20, height: 15, fps: 5 },\n    { mode: Mode.RUNNING, img: CatRunningSprite, width: 22, height: 16, fps: 10 },\n  ]\n\n  constructor(\n    context: CanvasRenderingContext2D\n  ) {\n    super(context)\n\n    Cat.SPRITES.forEach(({ mode, img, width, height, fps }) => {\n      const image = new Image()\n      image.src = img\n      this.sprites.set(mode, new Sprite(image, width, height, fps))\n    })\n  }\n\n  render(delta: number) {\n    const sprite = this.sprites.get(this.mode)\n    sprite?.update(delta)\n    sprite?.draw(this.context, 0, 0, this.direction)\n  }\n\n  move(distance: Point) {\n    super.move(distance)\n    this.mode = Mode.RUNNING\n  }\n\n  stop() {\n    super.stop()\n    this.mode = Mode.IDLE\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1H4Ur\")).toString();","import Mobile from \"../mobile/Mobile\"\n\nexport default class CirclingTriangle extends Mobile {\n\n  constructor(\n    context: CanvasRenderingContext2D\n  ) {\n    super(context)\n  }\n\n  render() {\n    this.context.save()\n    this.context.rotate(this.lifetime / 1000)\n    this.context.beginPath()\n    this.context.moveTo(0, -5)\n    this.context.lineTo(5, 5)\n    this.context.lineTo(0, 3)\n    this.context.lineTo(-5, 5)\n    this.context.lineTo(0, -5)\n    this.context.fillStyle = \"red\"\n    this.context.fill()\n    this.context.restore()\n  }\n}\n","import Point from \"../core/Point\"\nimport Mobile from \"../mobile/Mobile\"\n\nexport default class TargetPoint extends Mobile {\n  constructor(\n    context: CanvasRenderingContext2D,\n    private source: Mobile,\n  ) {\n    super(context)\n  }\n\n  render() {\n    const dist = this.source.position.subtract(this.position)\n    this.context.beginPath()\n    this.context.moveTo(0, 0)\n    this.context.lineTo(dist.x, dist.y)\n    this.context.strokeStyle = '#FFF'\n    this.context.setLineDash([5, 15])\n    this.context.stroke()\n  }\n\n  moveTo(position: Point) {\n    super.moveTo(position)\n    console.log(this.position, this.source.position)\n  }\n}\n","import Point from \"../core/Point\"\n\nexport default class Space {\n  width: number\n  height: number\n  starElapsed = 0\n  backgroundColor = \"rgb(10, 10, 10)\"\n  starColorRange = 100\n  stars: Point[] = []\n  maxStars = 400\n\n  constructor(\n    private context: CanvasRenderingContext2D\n  ) {\n  }\n\n  animate(delta: number) {\n    this.render(delta)\n  }\n\n  private render(delta: number) {\n    this.renderBackground()\n    this.renderStars()\n\n    if (this.checkStarElapsed(delta)) {\n      this.updateStars()\n    }\n  }\n\n  private renderBackground() {\n    this.context.fillStyle = this.backgroundColor\n    this.context.fillRect(0, 0, this.width, this.height)\n  }\n\n  private renderStars() {\n    this.context.fillStyle = \"white\"\n    this.stars.forEach(star => {\n      this.context.fillRect(star.x, star.y, 1, 1)\n    })\n  }\n\n  private updateStars() {\n    this.stars = []\n    for (let i = 0; i < this.maxStars; i++) {\n      this.stars.push(new Point(\n        Math.random() * this.width,\n        Math.random() * this.height,\n      ))\n    }\n  }\n\n  private checkStarElapsed(delta: number) {\n    this.starElapsed += delta\n    if (this.starElapsed > 200) {\n      this.starElapsed = 0\n      return true\n    }\n    return false\n  }\n}\n","import Cat from \"./characters/Cat\"\nimport CirclingTriangle from \"./characters/CirclingTriangle\"\nimport TargetPoint from \"./characters/TargetPoint\"\nimport Point from \"./core/Point\"\nimport Mobile from \"./mobile/Mobile\"\nimport Space from \"./space/Space\"\n\nexport default class Game {\n  width = 0\n  height = 0\n  lastTime = 0\n  delta = 0\n  space: Space\n  player: Mobile\n  targetPoint: Mobile\n  enemies: Mobile[] = []\n\n  constructor(\n    private context: CanvasRenderingContext2D,\n  ) {\n    this.space = new Space(context)\n    this.player = new Cat(context)\n    this.targetPoint = new TargetPoint(context, this.player)\n\n    for (let i = 0; i < 10; i++) {\n      const enemy = new CirclingTriangle(context)\n      enemy.position.x = Math.random() * 1000 - 500\n      enemy.position.y = Math.random() * 1000 - 500\n      this.enemies.push(enemy)\n    }\n  }\n\n  resize(width: number, height: number) {\n    this.width = width\n    this.height = height\n    this.space.width = width\n    this.space.height = height\n  }\n\n  animate(time: number) {\n    this.updateDelta(time)\n    this.space.animate(this.delta)\n    this.updatePlayer()\n    this.updateEnemies()\n    this.updateTargetPoint()\n    this.context.restore()\n  }\n\n  movePlayer(x: number, y: number) {\n    const distance = new Point(x, y)\n    this.player.move(distance)\n    this.targetPoint.moveTo(this.player.position.add(distance))\n  }\n\n  stopPlayer() {\n    this.player.stop()\n  }\n\n  private updatePlayer() {\n    this.context.save()\n    this.context.translate(this.width / 2, this.height / 2)\n    this.player.animate(this.delta)\n    this.context.restore()\n  }\n\n  private updateEnemies() {\n    this.enemies.forEach(enemy => {\n      this.context.save()\n      this.context.translate(\n        this.width / 2 - this.player.position.x + enemy.position.x,\n        this.height / 2 - this.player.position.y + enemy.position.y,\n      )\n      enemy.animate(this.delta)\n      this.context.restore()\n    })\n  }\n\n  private updateTargetPoint() {\n    this.context.save()\n    this.context.translate(\n      this.width / 2 - this.player.position.x + this.targetPoint.position.x,\n      this.height / 2 - this.player.position.y + this.targetPoint.position.y,\n    )\n    this.targetPoint.animate(this.delta)\n    this.context.restore()\n  }\n\n  private updateDelta(time: number) {\n    this.delta = time - this.lastTime\n    this.lastTime = time\n  }\n}\n","import Point from \"./game/core/Point\"\nimport Game from \"./game/Game\"\n\nexport class App {\n  canvas: HTMLCanvasElement\n  context: CanvasRenderingContext2D\n  game: Game\n  width: number\n  height: number\n  keys: string[] = []\n\n  constructor() {\n    this.canvas = document.createElement(\"canvas\")\n    this.context = this.canvas.getContext(\"2d\")!\n      this.game = new Game(this.context)\n  }\n\n  start() {\n    document.body.appendChild(this.canvas)\n    window.addEventListener(\"resize\", this.resize.bind(this))\n    this.registerCanvasEvents()\n    this.resize()\n    this.animate()\n  }\n\n  private animate(time = 0) {\n    this.game.animate(time)\n\n    requestAnimationFrame(this.animate.bind(this))\n  }\n\n  private resize() {\n    this.width = document.body.clientWidth\n    this.height = document.body.clientHeight\n    this.canvas.width = this.width\n    this.canvas.height = this.height\n\n    this.game.resize(this.width, this.height)\n  }\n\n  private registerCanvasEvents() {\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown.bind(this))\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove.bind(this))\n    this.canvas.addEventListener(\"mouseup\", this.onTouchEnd.bind(this))\n    this.canvas.addEventListener(\"touchstart\", this.onTouchStart.bind(this))\n    this.canvas.addEventListener(\"touchmove\", this.onTouchStart.bind(this))\n    this.canvas.addEventListener(\"touchend\", this.onTouchEnd.bind(this))\n    document.addEventListener(\"keydown\", this.onKeyDown.bind(this))\n    document.addEventListener(\"keyup\", this.onKeyUp.bind(this))\n  }\n\n  private onMouseDown(event: MouseEvent) {\n    this.game.movePlayer(\n      ...this.calculateDistanceFromCenter(event.clientX, event.clientY)\n    )\n  }\n\n  private onMouseMove(event: MouseEvent) {\n    if (event.buttons === 0)\n      return\n    this.game.movePlayer(\n      ...this.calculateDistanceFromCenter(event.clientX, event.clientY)\n    )\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    this.game.movePlayer(\n      ...this.calculateDistanceFromCenter(event.touches[0].clientX, event.touches[0].clientY)\n    )\n  }\n\n  private onTouchEnd() {\n    this.game.stopPlayer()\n  }\n\n  private calculateDistanceFromCenter(x: number, y: number): [number, number] {\n    const center = new Point(this.width / 2, this.height / 2)\n    const point = new Point(x, y)\n    const distance = point.subtract(center)\n    return [distance.x, distance.y]\n  }\n\n  private onKeyDown(event: KeyboardEvent) {\n    if (!(event.key in App.KEY_TO_DIRECTION)) {\n      return\n    }\n    if (this.keys.includes(event.key)) {\n      return\n    }\n    this.keys.push(event.key)\n    this.updateKeys()\n  }\n\n  private onKeyUp(event: KeyboardEvent) {\n    if (!(event.key in App.KEY_TO_DIRECTION)) {\n      return\n    }\n    this.keys = this.keys.filter(key => key !== event.key)\n    this.updateKeys()\n  }\n\n  private updateKeys() {\n    if (this.keys.length === 0) {\n      this.game.stopPlayer()\n      return\n    }\n    const sum = this.keys.reduce((sum, key) => {\n      return [sum[0] + App.KEY_TO_DIRECTION[key][0], sum[1] + App.KEY_TO_DIRECTION[key][1]]\n    }, [0, 0])\n    this.game.movePlayer(sum[0], sum[1])\n  }\n\n  static KEY_TO_DIRECTION: { [key: string]: [number, number] } = {\n    \"w\": [0, -1],\n    \"a\": [-1, 0],\n    \"s\": [0, 1],\n    \"d\": [1, 0],\n    \"ArrowUp\": [0, -1],\n    \"ArrowLeft\": [-1, 0],\n    \"ArrowDown\": [0, 1],\n    \"ArrowRight\": [1, 0],\n  }\n}\n\nnew App().start()\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$1162b4d1b63bcb0b$export$2e2bcd8739ae039","constructor","x","y","this","static","add","point","subtract","unit","zero","Math","sqrt","multiply","scalar","angle","atan2","$73c3f5d8867f376c$export$2e2bcd8739ae039","context","position","velocity","direction","lifetime","animate","delta","update","render","move","distance","moveTo","stop","$da5fc1c35aff1e0d$export$2e2bcd8739ae039","image","frameWidth","frameHeight","framesPerSecond","frameIndex","time","imageLoaded","onload","framesPerRow","floor","width","dt","height","draw","ctx","row","col","flip","save","scale","drawImage","restore","$e2c9dcac0f02a629$exports","URL","resolve","import","meta","url","toString","$85c94ce00cb2a82b$var$Mode","Mode","$7357178c6a7828df$exports","$85c94ce00cb2a82b$export$2e2bcd8739ae039","sprites","Map","mode","IDLE","img","$parcel$interopDefault","fps","RUNNING","super","SPRITES","forEach","Image","src","set","sprite","get","$1680c37e97ccc699$export$2e2bcd8739ae039","rotate","beginPath","lineTo","fillStyle","fill","$593fdb6cc61fd03e$export$2e2bcd8739ae039","source","dist","strokeStyle","setLineDash","stroke","console","log","$f8daf18d7ca6e6d0$export$2e2bcd8739ae039","starElapsed","backgroundColor","starColorRange","stars","maxStars","renderBackground","renderStars","checkStarElapsed","updateStars","fillRect","star","push","random","$1d65543a723a8bec$export$2e2bcd8739ae039","lastTime","enemies","space","player","targetPoint","enemy","resize","updateDelta","updatePlayer","updateEnemies","updateTargetPoint","movePlayer","stopPlayer","translate","$2ae89aad8d89d959$export$86fbec116b87613f","canvas","document","createElement","getContext","game","start","body","appendChild","window","addEventListener","bind","registerCanvasEvents","requestAnimationFrame","clientWidth","clientHeight","onMouseDown","onMouseMove","onTouchEnd","onTouchStart","onKeyDown","onKeyUp","event","calculateDistanceFromCenter","clientX","clientY","buttons","touches","center","key","KEY_TO_DIRECTION","includes","updateKeys","filter","sum","reduce","w","a","s","d","ArrowUp","ArrowLeft","ArrowDown","ArrowRight"],"version":3,"file":"index.e8bda55c.js.map"}