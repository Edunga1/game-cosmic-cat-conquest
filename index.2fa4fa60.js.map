{"mappings":"kpBAsBA,IAAAA,EACAC,E,iFArBA,IAAIC,EAAU,CAAC,EAoBfF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,GAElC,EAaAL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,CACT,C,ICpBAE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,iOCA1C,MAAAC,EACbC,YACSC,EACAC,G,OADAD,E,OACAC,EAEPC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,CACX,CAEAE,cACE,OAAO,IAAIL,EAAM,EAAG,EACtB,CAEAM,IAAIC,GACF,OAAO,IAAIP,EAAMI,KAAKF,EAAIK,EAAML,EAAGE,KAAKD,EAAII,EAAMJ,EACpD,CAEAK,SAASD,GACP,OAAO,IAAIP,EAAMI,KAAKF,EAAIK,EAAML,EAAGE,KAAKD,EAAII,EAAMJ,EACpD,CAEAM,OACE,MAAMjB,EAASY,KAAKZ,SACpB,OAAe,IAAXA,EACKQ,EAAMU,OAER,IAAIV,EAAMI,KAAKF,EAAIV,EAAQY,KAAKD,EAAIX,EAC7C,CAEAA,SACE,OAAOmB,KAAKC,KAAKR,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,EACnD,CAEAU,SAASC,GACP,OAAO,IAAId,EAAMI,KAAKF,EAAIY,EAAQV,KAAKD,EAAIW,EAC7C,CAEAC,QACE,OAAOJ,KAAKK,MAAMZ,KAAKD,EAAGC,KAAKF,EACjC,CAEAe,WAAWV,GACT,OAAOH,KAAKI,SAASD,GAAOf,QAC9B,EC3Ca,MAAA0B,EAGbjB,YACEkB,EACOC,EAAQ,G,WAARA,E,KAJFD,GAAKE,EAAiBC,GAAG,KAM9BlB,KAAKe,GAAKE,EAAiBC,GAAGH,EAChC,CAEAI,OAAOC,GACLpB,KAAKe,GAAGM,OAASD,EAAOJ,KAC1B,EAGF,MAAMC,EACJpB,YACSwB,EACAC,G,WADAD,E,SACAC,CACL,CAEJrB,UAAUoB,GACR,OAAO,IAAIJ,EAAiBI,EAAOA,EACrC,CAEAE,OAAOD,GACLtB,KAAKqB,MAAQd,KAAKiB,IAAIxB,KAAKqB,MAAOC,GAClCtB,KAAKsB,IAAMA,CACb,ECzBa,MAAAG,EAWb5B,YACY6B,G,aAAAA,E,KAXZC,SAAW/B,EAAMU,O,KACjBsB,SAAWhC,EAAMU,O,KACjBuB,UAAY,IAAIjC,EAAM,EAAG,G,KACzBkC,SAAW,E,KACXC,YAAcC,I,KACdC,UAAW,E,KAEXC,WAAa,IAAIpB,EAAW,EAAG,G,KAC/BqB,QAAoB,EAKpB,CAEAC,QAAQC,GACNrC,KAAKsC,OAAOD,GACZrC,KAAKuC,OAAOF,EACd,CAEAG,KAAKC,GACHzC,KAAK4B,SAAWa,EAASpC,OACzBL,KAAK6B,UAAYY,CACnB,CAEAC,OAAOf,GACL3B,KAAK2B,SAAWA,CAClB,CAEAgB,OACE3C,KAAK4B,SAAWhC,EAAMU,MACxB,CAEAsC,OAAOC,GACLA,EAAOX,WAAWnB,GAAGM,OAASrB,KAAKkC,WAAWlB,KAChD,CAEA8B,WAAWC,GACT,OAAO/C,KAAKmC,QAAQa,SAASD,EAC/B,CAEQT,OAAOD,GACbrC,KAAK8B,UAAYO,EACjBrC,KAAK2B,SAAW3B,KAAK2B,SAASzB,IAAIF,KAAK4B,SAASnB,SAAS4B,EAAQ,IAE7DrC,KAAKiD,oBACPjD,KAAKkD,iBAET,CAEUD,mBACR,OAAOjD,KAAK8B,SAAW9B,KAAK+B,WAC9B,ECtDa,MAAAoB,EAObtD,YACUuD,EACAC,EACAC,EACAC,EAAkB,GAClBC,GAAO,G,WAJPJ,E,gBACAC,E,iBACAC,E,qBACAC,E,UACAC,E,KAXVC,WAAa,E,KACbC,KAAO,E,KACPC,aAAe,E,KACfC,aAAc,E,KACdC,UAAY,EASV7D,KAAKoD,MAAMU,OAAS,KAClB9D,KAAK4D,aAAc,EACnB5D,KAAK2D,aAAepD,KAAKwD,MAAMX,EAAMY,MAAQX,EAAA,CAEjD,CAEAf,OAAO2B,GACL,GAAKjE,KAAKkE,YAEV,IADAlE,KAAK0D,MAAQO,EACNjE,KAAK0D,KAAO,IAAK1D,KAAKuD,iBAC3BvD,KAAK0D,MAAQ,IAAK1D,KAAKuD,gBACvBvD,KAAKyD,aACDzD,KAAKyD,YAAczD,KAAK2D,aAAepD,KAAKwD,MAAM/D,KAAKoD,MAAMe,OAASnE,KAAKsD,eAC7EtD,KAAKyD,WAAa,EAClBzD,KAAK6D,YAGX,CAEAO,KACEC,EACAvE,EACAC,EACA8B,EAAmBjC,EAAMU,QAEzB,IAAKN,KAAKkE,YAAa,OACvB,IAAKlE,KAAK4D,YAAa,OAEvB,MAAMU,EAAM/D,KAAKwD,MAAM/D,KAAKyD,WAAazD,KAAK2D,cACxCY,EAAMvE,KAAKyD,WAAazD,KAAK2D,aAE7Ba,EAAO3C,EAAU/B,EAAI,EAAI,GAAI,EAEnCuE,EAAII,OACJJ,EAAIK,MAAMF,EAAM,GAChBH,EAAIM,UACF3E,KAAKoD,MACLmB,EAAMvE,KAAKqD,WACXiB,EAAMtE,KAAKsD,YACXtD,KAAKqD,WACLrD,KAAKsD,YACLxD,EAAIE,KAAKqD,WAAa,EACtBtD,EAAIC,KAAKsD,YAAc,EACvBtD,KAAKqD,WACLrD,KAAKsD,aAEPe,EAAIO,SACN,CAEQV,YACN,OAAOlE,KAAKwD,MAA2B,IAAnBxD,KAAK6D,SAC3B,E,MCnEFgB,EAAiB,IAAAC,IAAoBtF,EAAA,SAAAuF,QAA6C,SAAAC,OAAAC,KAAAC,KAAUC,W,UCM5FC,E,IAAKC,ECNLC,EAAiB,IAAAR,IAAoBtF,EAAA,SAAAuF,QAA6C,SAAAC,OAAAC,KAAAC,KAAUC,YDMvFE,EAAAD,MAAA,KAAAC,EACH,eADGA,IAEH,qBAGa,MAAAE,UAAkB9D,EACvB+D,QAA6B,IAAIC,IACjCC,KAAON,EAAKO,KAEpB1F,eAAiB,CACf,CAAEyF,KAAMN,EAAKO,KAAMC,IAAKC,EAAAP,GAAetB,MAAO,GAAIG,OAAQ,GAAI2B,IAAK,GACnE,CAAEJ,KAAMN,EAAKW,QAASH,IAAKC,EAAAhB,GAAkBb,MAAO,GAAIG,OAAQ,GAAI2B,IAAK,KAG3EjG,YACE6B,GAEAsE,MAAMtE,GAEN1B,KAAKkC,WAAWnB,GAAGQ,OAAO,IAC1BvB,KAAKkC,WAAWlB,MAAQ,EAExBuE,EAAIU,QAAQC,SAAQ,EAACR,KAAEA,EAAIE,IAAEA,EAAG5B,MAAEA,EAAKG,OAAEA,EAAM2B,IAAEA,MAC/C,MAAM1C,EAAQ,IAAI+C,MAClB/C,EAAMgD,IAAMR,EACZ5F,KAAKwF,QAAQa,IAAIX,EAAM,IAAIvC,EAAOC,EAAOY,EAAOG,EAAQ2B,GAAA,GAE5D,CAEAvD,OAAOF,GACL,MAAMiE,EAAStG,KAAKwF,QAAQe,IAAIvG,KAAK0F,MACrCY,GAAQhE,OAAOD,GACfiE,GAAQlC,KAAKpE,KAAK0B,QAAS,EAAG,EAAG1B,KAAK6B,UACxC,CAEAW,KAAKC,GACHuD,MAAMxD,KAAKC,GACXzC,KAAK0F,KAAON,EAAKW,OACnB,CAEApD,OACEqD,MAAMrD,OACN3C,KAAK0F,KAAON,EAAKO,IACnB,EE/Ca,MAAAa,UAA+B/E,EAE5C5B,YACE6B,GAEAsE,MAAMtE,GAEN1B,KAAKkC,WAAWnB,GAAGQ,OAAO,GAC1BvB,KAAKkC,WAAWlB,MAAQ,CAC1B,CAEAuB,SACEvC,KAAK0B,QAAQ+C,OACbzE,KAAK0B,QAAQ+E,OAAOzG,KAAK8B,SAAW,KACpC9B,KAAK0B,QAAQgF,YACb1G,KAAK0B,QAAQgB,OAAO,GAAG,GACvB1C,KAAK0B,QAAQiF,OAAO,EAAG,GACvB3G,KAAK0B,QAAQiF,OAAO,EAAG,GACvB3G,KAAK0B,QAAQiF,QAAO,EAAI,GACxB3G,KAAK0B,QAAQiF,OAAO,GAAG,GACvB3G,KAAK0B,QAAQkF,UAAY,MACzB5G,KAAK0B,QAAQmF,OACb7G,KAAK0B,QAAQkD,SACf,ECtBa,MAAAkC,UAA0BrF,EAGvC5B,YACE6B,EACQN,GAER4E,MAAMtE,G,YAFEN,E,KAJF2F,SAAU,EAOhB/G,KAAKiC,UAAW,CAClB,CAEA+E,WAAWD,GACT/G,KAAK+G,QAAUA,CACjB,CAEAxE,SACE,IAAKvC,KAAK+G,QACR,OAEF,MAAME,EAAOjH,KAAKoB,OAAOO,SAASvB,SAASJ,KAAK2B,UAChD3B,KAAK0B,QAAQgF,YACb1G,KAAK0B,QAAQgB,OAAO,EAAG,GACvB1C,KAAK0B,QAAQiF,OAAOM,EAAKnH,EAAGmH,EAAKlH,GACjCC,KAAK0B,QAAQwF,YAAc,OAC3BlH,KAAK0B,QAAQyF,YAAY,CAAC,EAAG,KAC7BnH,KAAK0B,QAAQ0F,QACf,CAEA1E,OAAOf,GACLqE,MAAMtD,OAAOf,EACf,E,MCjCF0F,EAAiB,IAAAvC,IAAoBtF,EAAA,SAAAuF,QAA6C,SAAAC,OAAAC,KAAAC,KAAUC,WCI7E,MAAAmC,UAAwC7F,EAErD5B,YACE6B,EACQ4E,GAERN,MAAMtE,G,YAFE4E,EAGRtG,KAAKiC,UAAW,CAClB,CAEUgB,mBACR,OAAOjD,KAAKsG,OAAOzC,UAAY,CACjC,CAEUtB,OAAOF,GACfrC,KAAKsG,OAAOhE,OAAOD,GACnBrC,KAAKsG,OAAOlC,KAAKpE,KAAK0B,QAAS,EAAG,EAAG1B,KAAK6B,UAC5C,ECjBa,MAAA0F,UAA6BD,EAC1CzH,YACE6B,GAEA,MAAM0B,EAAQ,IAAI+C,MAClB/C,EAAMgD,IAAMP,EAAAwB,GAEZrB,MAAMtE,EADS,IAAIyB,EAAOC,EAAO,GAAI,GAAI,IAAI,GAE/C,CAEUb,OAAOF,GACfrC,KAAK0B,QAAQ+C,OACb,MAAM+C,EAAMxH,KAAK6B,UAAUxB,OAAOI,SAAS,IAC3CT,KAAK0B,QAAQ+F,UAAUD,EAAI1H,EAAG0H,EAAIzH,GAElCC,KAAK0B,QAAQ+E,OAAOzG,KAAK6B,UAAUlB,QAAUJ,KAAKmH,GAAK,GACvD1B,MAAMzD,OAAOF,GACbrC,KAAK0B,QAAQkD,SACf,ECpBa,MAAA+C,EASb9H,YACU6B,G,aAAAA,E,KATVsC,MAAQ,E,KACRG,OAAS,E,KACTyD,YAAc,E,KACdC,gBAAkB,kB,KAClBC,eAAiB,I,KACjBC,MAAiB,G,KACjBC,SAAW,GAKX,CAEA5F,QAAQC,GACNrC,KAAKuC,OAAOF,EACd,CAEQE,OAAOF,GACbrC,KAAKiI,mBACLjI,KAAKkI,cAEDlI,KAAKmI,iBAAiB9F,IACxBrC,KAAKoI,aAET,CAEQH,mBACNjI,KAAK0B,QAAQkF,UAAY5G,KAAK6H,gBAC9B7H,KAAK0B,QAAQ2G,SAAS,EAAG,EAAGrI,KAAKgE,MAAOhE,KAAKmE,OAC/C,CAEQ+D,cACNlI,KAAK0B,QAAQkF,UAAY,QACzB5G,KAAK+H,MAAM7B,SAAQoC,IACjBtI,KAAK0B,QAAQ2G,SAASC,EAAKxI,EAAGwI,EAAKvI,EAAG,EAAG,KAE7C,CAEQqI,cACNpI,KAAK+H,MAAQ,GACb,IAAK,IAAI5I,EAAI,EAAGA,EAAIa,KAAKgI,SAAU7I,IACjCa,KAAK+H,MAAMQ,KAAK,IAAI3I,EAClBW,KAAKiI,SAAWxI,KAAKgE,MACrBzD,KAAKiI,SAAWxI,KAAKmE,QAG3B,CAEQgE,iBAAiB9F,GAEvB,OADArC,KAAK4H,aAAevF,EAChBrC,KAAK4H,YAAc,MACrB5H,KAAK4H,YAAc,GACZ,EAGX,EClDa,MAAAa,EAab5I,YACU6B,G,aAAAA,E,KAbVgH,QAAU,CACRC,iBAAiB,G,KAEnB3E,MAAQ,E,KACRG,OAAS,E,KACTyE,SAAW,E,KACXvG,MAAQ,E,KAIRwG,QAAoB,GAKlB7I,KAAK8I,MAAQ,IAAInB,EAAMjG,GACvB1B,KAAK+I,OAAS,IAAIxD,EAAI7D,GACtB1B,KAAKgJ,YAAc,IAAIlC,EAAYpF,EAAS1B,KAAK+I,QACjD/I,KAAK6I,QAAQN,KAAKvI,KAAKgJ,aAEvB,IAAK,IAAI7J,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAM8J,EAAQ,IAAIzC,EAAiB9E,GACnCuH,EAAMtH,SAAS7B,EAAoB,IAAhBS,KAAKiI,SAAkB,IAC1CS,EAAMtH,SAAS5B,EAAoB,IAAhBQ,KAAKiI,SAAkB,IAC1CS,EAAM9G,QAAQoG,KAAKvI,KAAK+I,QACxB/I,KAAK+I,OAAO5G,QAAQoG,KAAKU,GACzBjJ,KAAK6I,QAAQN,KAAKU,EACpB,CACF,CAEAC,OAAOlF,EAAeG,GACpBnE,KAAKgE,MAAQA,EACbhE,KAAKmE,OAASA,EACdnE,KAAK8I,MAAM9E,MAAQA,EACnBhE,KAAK8I,MAAM3E,OAASA,CACtB,CAEA/B,QAAQsB,GACN1D,KAAKmJ,YAAYzF,GACjB1D,KAAKoJ,yBACLpJ,KAAKqJ,eACLrJ,KAAK0B,QAAQkD,SACf,CAEA0E,WAAWxJ,EAAWC,GACpB,MAAM0C,EAAW,IAAI7C,EAAME,EAAGC,GAC9BC,KAAK+I,OAAOvG,KAAKC,GACjBzC,KAAKgJ,YAAYtG,OAAO1C,KAAK+I,OAAOpH,SAASzB,IAAIuC,IACjDzC,KAAKgJ,YAAYhC,YAAW,EAC9B,CAEAuC,aACEvJ,KAAK+I,OAAOpG,OACZ3C,KAAKgJ,YAAYhC,YAAW,GAC5BhH,KAAKwJ,wBACLxJ,KAAKyJ,aACP,CAEAC,aACE,MAAO,mBACK1J,KAAK+I,OAAOpH,SAAS7B,MAAME,KAAK+I,OAAOpH,SAAS5B,qBAC/CC,KAAK6I,QAAQzJ,cAE5B,CAEQiK,eACNrJ,KAAK0B,QAAQ+C,OACbzE,KAAK0B,QAAQ+F,UAAUzH,KAAKgE,MAAQ,EAAGhE,KAAKmE,OAAS,GACrDnE,KAAK+I,OAAO3G,QAAQpC,KAAKqC,OACzBrC,KAAK2J,gBAAgB3J,KAAK+I,OAAQ,IAClC/I,KAAK0B,QAAQkD,UACb5E,KAAK4J,mBACP,CAEQA,oBACN5J,KAAK6I,QAAU7I,KAAK6I,QAAQgB,QAAO9G,GAAUA,EAAOb,WAAWnB,GAAGM,MAAQ,GAC5E,CAEQoI,cACN,MAAMK,EAAe9J,KAAK6I,QACvBgB,QAAO9G,GAAU/C,KAAK+I,OAAOjG,WAAWC,KACxCgH,MAAKhH,GAAUA,EAAOpB,SAASd,WAAWb,KAAK+I,OAAOpH,UAAY,KAChEmI,GAGL9J,KAAK+I,OAAOnG,OAAOkH,EACrB,CAEQV,yBACNpJ,KAAK8I,MAAM1G,QAAQpC,KAAKqC,OACxBrC,KAAK6I,QAAQ3C,SAAQ+C,IACnBjJ,KAAK0B,QAAQ+C,OACbzE,KAAK0B,QAAQ+F,UACXzH,KAAKgE,MAAQ,EAAIhE,KAAK+I,OAAOpH,SAAS7B,EAAImJ,EAAMtH,SAAS7B,EACzDE,KAAKmE,OAAS,EAAInE,KAAK+I,OAAOpH,SAAS5B,EAAIkJ,EAAMtH,SAAS5B,GAE5DkJ,EAAM7G,QAAQpC,KAAKqC,OACnBrC,KAAK2J,gBAAgBV,EAAO,GAAI,GAChCjJ,KAAK0B,QAAQkD,SAAO,GAExB,CAEQuE,YAAYzF,GAClB1D,KAAKqC,MAAQqB,EAAO1D,KAAK4I,SACzB5I,KAAK4I,SAAWlF,CAClB,CAEQ8F,wBACN,MAAMQ,EAAS,IAAIzC,EAAevH,KAAK0B,SACvCsI,EAAOrI,SAAW3B,KAAK+I,OAAOpH,SAC9BqI,EAAOnI,UAAY7B,KAAK+I,OAAOlH,UAC/BmI,EAAO9G,cAAgB,KACrBlD,KAAK6I,QAAQoB,OAAOjK,KAAK6I,QAAQqB,QAAQF,GAAS,IAEpDhK,KAAK6I,QAAQN,KAAKyB,EACpB,CAEQL,gBAAgB5G,EAAgBoH,EAAgBC,EAAO,GAC7D,IAAKpK,KAAK0I,QAAQC,kBAAoB5F,EAAOd,SAC3C,OAEFjC,KAAK0B,QAAQkF,UAAY,QACzB5G,KAAK0B,QAAQ2I,KAAO,GAAGD,YACvB,MAAME,EAAO,GAAG/J,KAAKgK,MAAMxH,EAAOpB,SAAS7B,OAAOS,KAAKgK,MAAMxH,EAAOpB,SAAS5B,KACvEyK,EAAOF,EAAKlL,OAAS,EAAIgL,EAC/BpK,KAAK0B,QAAQ+I,SAASH,GAAOE,EAAML,EACrC,ECpIK,MAAMO,EAIX1G,MAAQ,EACRG,OAAS,EACTlF,KAAiB,GAEjBY,cACEG,KAAK2K,OAASC,SAASC,cAAc,UACrC,MAAMnJ,EAAU1B,KAAK2K,OAAOG,WAAW,MACvC,IAAKpJ,EACH,MAAM,IAAInC,MAAM,gCAElBS,KAAK0B,QAAUA,EACf1B,KAAK+K,KAAO,IAAItC,EAAKzI,KAAK0B,QAC5B,CAEAsJ,QACEJ,SAASK,KAAKC,YAAYlL,KAAK2K,QAC/BQ,OAAOC,iBAAiB,SAAUpL,KAAKkJ,OAAOmC,KAAKrL,OACnDA,KAAKsL,uBACLtL,KAAKkJ,SACLlJ,KAAKoC,SACP,CAEAmJ,kBAKE,OAJAvL,KAAK+K,KAAKrC,QAAQC,iBAAkB,EACpC6C,aAAY,KACVC,QAAQC,IAAI1L,KAAK+K,KAAKrB,aAAU,GAC/B,KACI1J,IACT,CAEQoC,QAAQsB,EAAO,GACrB1D,KAAK+K,KAAK3I,QAAQsB,GAElBiI,sBAAsB3L,KAAKoC,QAAQiJ,KAAKrL,MAC1C,CAEQkJ,SACNlJ,KAAKgE,MAAQ4G,SAASK,KAAKW,YAC3B5L,KAAKmE,OAASyG,SAASK,KAAKY,aAC5B7L,KAAK2K,OAAO3G,MAAQhE,KAAKgE,MACzBhE,KAAK2K,OAAOxG,OAASnE,KAAKmE,OAE1BnE,KAAK+K,KAAK7B,OAAOlJ,KAAKgE,MAAOhE,KAAKmE,OACpC,CAEQmH,uBACNtL,KAAK2K,OAAOS,iBAAiB,YAAapL,KAAK8L,YAAYT,KAAKrL,OAChEA,KAAK2K,OAAOS,iBAAiB,YAAapL,KAAK+L,YAAYV,KAAKrL,OAChEA,KAAK2K,OAAOS,iBAAiB,UAAWpL,KAAKgM,WAAWX,KAAKrL,OAC7DA,KAAK2K,OAAOS,iBAAiB,aAAcpL,KAAKiM,aAAaZ,KAAKrL,OAClEA,KAAK2K,OAAOS,iBAAiB,YAAapL,KAAKiM,aAAaZ,KAAKrL,OACjEA,KAAK2K,OAAOS,iBAAiB,WAAYpL,KAAKgM,WAAWX,KAAKrL,OAC9D4K,SAASQ,iBAAiB,UAAWpL,KAAKkM,UAAUb,KAAKrL,OACzD4K,SAASQ,iBAAiB,QAASpL,KAAKmM,QAAQd,KAAKrL,MACvD,CAEQ8L,YAAYM,GAClBpM,KAAK+K,KAAKzB,cACLtJ,KAAKqM,4BAA4BD,EAAME,QAASF,EAAMG,SAE7D,CAEQR,YAAYK,GACI,IAAlBA,EAAMI,SAEVxM,KAAK+K,KAAKzB,cACLtJ,KAAKqM,4BAA4BD,EAAME,QAASF,EAAMG,SAE7D,CAEQN,aAAaG,GACnBpM,KAAK+K,KAAKzB,cACLtJ,KAAKqM,4BAA4BD,EAAMK,QAAQ,GAAGH,QAASF,EAAMK,QAAQ,GAAGF,SAEnF,CAEQP,aACNhM,KAAK+K,KAAKxB,YACZ,CAEQ8C,4BAA4BvM,EAAWC,GAC7C,MAAM2M,EAAS,IAAI9M,EAAMI,KAAKgE,MAAQ,EAAGhE,KAAKmE,OAAS,GAEjD1B,EADQ,IAAI7C,EAAME,EAAGC,GACJK,SAASsM,GAChC,MAAO,CAACjK,EAAS3C,EAAG2C,EAAS1C,EAC/B,CAEQmM,UAAUE,GACVA,EAAMO,OAAOjC,EAAIkC,mBAGnB5M,KAAKf,KAAK+D,SAASoJ,EAAMO,OAG7B3M,KAAKf,KAAKsJ,KAAK6D,EAAMO,KACrB3M,KAAK6M,cACP,CAEQV,QAAQC,GACRA,EAAMO,OAAOjC,EAAIkC,mBAGvB5M,KAAKf,KAAOe,KAAKf,KAAK4K,QAAO8C,GAAOA,IAAQP,EAAMO,MAClD3M,KAAK6M,aACP,CAEQA,aACN,GAAyB,IAArB7M,KAAKf,KAAKG,OAEZ,YADAY,KAAK+K,KAAKxB,aAGZ,MAAMuD,EAAM9M,KAAKf,KAAK8N,QAAO,CAACD,EAAKH,IAC1B,CAACG,EAAI,GAAKpC,EAAIkC,iBAAiBD,GAAK,GAAIG,EAAI,GAAKpC,EAAIkC,iBAAiBD,GAAK,KACjF,CAAC,EAAG,IACP3M,KAAK+K,KAAKzB,WAAWwD,EAAI,GAAIA,EAAI,GACnC,CAEA7M,wBAA+D,CAC7D+M,EAAK,CAAC,GAAG,GACTC,EAAK,EAAC,EAAI,GACVC,EAAK,CAAC,EAAG,GACTC,EAAK,CAAC,EAAG,GACTC,QAAW,CAAC,GAAG,GACfC,UAAa,EAAC,EAAI,GAClBC,UAAa,CAAC,EAAG,GACjBC,WAAc,CAAC,EAAG,KAItB,IAAI7C,GAAMa,kBAAkBP","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-248d45b26853c557.js","src/game/core/Point.ts","src/game/mobile/Attributes.ts","src/game/mobile/Mobile.ts","src/game/sprite/Sprite.ts","node_modules/@parcel/runtime-js/lib/runtime-d99662e4b0933e94.js","src/game/characters/Cat.ts","node_modules/@parcel/runtime-js/lib/runtime-54656b7000d933e5.js","src/game/characters/CirclingTriangle.ts","src/game/characters/TargetPoint.ts","node_modules/@parcel/runtime-js/lib/runtime-5e9d9a7d7a650e2f.js","src/game/effects/SpriteEffectBase.ts","src/game/effects/ConfettiEffect.ts","src/game/space/Space.ts","src/game/Game.ts","src/App.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"67Pf5\\\":\\\"index.2fa4fa60.js\\\",\\\"kp27Z\\\":\\\"cat-sprites-running.47e835c7.png\\\",\\\"1H4Ur\\\":\\\"cat-sprites-idle.8767d413.png\\\",\\\"7agUk\\\":\\\"confetti-sprites.0546130f.png\\\"}\"));","export default class Point {\n  constructor(\n    public x: number,\n    public y: number\n  ) {\n    this.x = x\n    this.y = y\n  }\n\n  static zero() {\n    return new Point(0, 0)\n  }\n\n  add(point: Point) {\n    return new Point(this.x + point.x, this.y + point.y)\n  }\n\n  subtract(point: Point) {\n    return new Point(this.x - point.x, this.y - point.y)\n  }\n\n  unit() {\n    const length = this.length()\n    if (length === 0) {\n      return Point.zero()\n    }\n    return new Point(this.x / length, this.y / length)\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  multiply(scalar: number) {\n    return new Point(this.x * scalar, this.y * scalar)\n  }\n\n  angle() {\n    return Math.atan2(this.y, this.x)\n  }\n\n  distanceTo(point: Point) {\n    return this.subtract(point).length()\n  }\n}\n\n","export default class Attributes {\n  public hp = NumericAttribute.of(100)\n\n  constructor(\n    hp: number,\n    public power = 0,\n  ) {\n    this.hp = NumericAttribute.of(hp)\n  }\n\n  damage(source: Attributes) {\n    this.hp.value -= source.power\n  }\n}\n\nclass NumericAttribute {\n  constructor(\n    public value: number,\n    public max: number,\n  ) { }\n\n  static of(value: number) {\n    return new NumericAttribute(value, value)\n  }\n\n  setMax(max: number) {\n    this.value = Math.min(this.value, max)\n    this.max = max\n  }\n}\n","import Point from \"../core/Point\"\nimport Attributes from \"./Attributes\"\n\nexport default abstract class Mobile {\n  position = Point.zero()\n  velocity = Point.zero()\n  direction = new Point(0, 0)\n  lifetime = 0\n  maxLifetime = Infinity\n  isLiving = true\n  onLifetimeEnd?: () => void\n  attributes = new Attributes(5, 1)\n  enemies: Mobile[] = []\n\n  constructor(\n    protected context: CanvasRenderingContext2D,\n  ) {\n  }\n\n  animate(delta: number) {\n    this.update(delta)\n    this.render(delta)\n  }\n\n  move(distance: Point) {\n    this.velocity = distance.unit()\n    this.direction = distance\n  }\n\n  moveTo(position: Point) {\n    this.position = position\n  }\n\n  stop() {\n    this.velocity = Point.zero()\n  }\n\n  attack(target: Mobile) {\n    target.attributes.hp.value -= this.attributes.power\n  }\n\n  isOpponent(mobile: Mobile): boolean {\n    return this.enemies.includes(mobile)\n  }\n\n  private update(delta: number) {\n    this.lifetime += delta\n    this.position = this.position.add(this.velocity.multiply(delta / 5))\n    // notify when lifetime is over\n    if (this.checkLifetimeEnd()) {\n      this.onLifetimeEnd?.()\n    }\n  }\n\n  protected checkLifetimeEnd(): boolean {\n    return this.lifetime > this.maxLifetime\n  }\n\n  protected abstract render(delta: number): void\n}\n","import Point from \"../core/Point\"\n\nexport default class Sprite {\n  frameIndex = 0\n  time = 0\n  framesPerRow = 0\n  imageLoaded = false\n  loopCount = 0\n\n  constructor(\n    private image: HTMLImageElement,\n    private frameWidth: number,\n    private frameHeight: number,\n    private framesPerSecond = 60,\n    private loop = true,\n  ) {\n    this.image.onload = () => {\n      this.imageLoaded = true\n      this.framesPerRow = Math.floor(image.width / frameWidth)\n    }\n  }\n\n  update(dt: number) {\n    if (!this.checkLoop()) return\n    this.time += dt\n    while (this.time > 1000/this.framesPerSecond) {\n      this.time -= 1000/this.framesPerSecond\n      this.frameIndex++\n      if (this.frameIndex >= this.framesPerRow * Math.floor(this.image.height / this.frameHeight)) {\n        this.frameIndex = 0\n        this.loopCount++\n      }\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    direction: Point = Point.zero(),\n  ) {\n    if (!this.checkLoop()) return\n    if (!this.imageLoaded) return\n\n    const row = Math.floor(this.frameIndex / this.framesPerRow)\n    const col = this.frameIndex % this.framesPerRow\n    // sprite is facing left by default\n    const flip = direction.x < 0 ? 1 : -1\n\n    ctx.save()\n    ctx.scale(flip, 1)\n    ctx.drawImage(\n      this.image,\n      col * this.frameWidth,\n      row * this.frameHeight,\n      this.frameWidth,\n      this.frameHeight,\n      x - this.frameWidth / 2,\n      y - this.frameHeight / 2,\n      this.frameWidth,\n      this.frameHeight\n    )\n    ctx.restore()\n  }\n\n  private checkLoop(): boolean {\n    return this.loop || this.loopCount === 0\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kp27Z\")).toString();","import Mobile from \"../mobile/Mobile\"\nimport Sprite from \"../sprite/Sprite\"\nimport CatRunningSprite from \"../../../assets/images/cat-sprites-running.png\"\nimport CatIdleSprite from \"../../../assets/images/cat-sprites-idle.png\"\nimport Point from \"../core/Point\"\n\nenum Mode {\n  IDLE,\n  RUNNING,\n}\n\nexport default class Cat extends Mobile {\n  private sprites: Map<Mode, Sprite> = new Map()\n  private mode = Mode.IDLE\n\n  static SPRITES = [\n    { mode: Mode.IDLE, img: CatIdleSprite, width: 20, height: 15, fps: 5 },\n    { mode: Mode.RUNNING, img: CatRunningSprite, width: 22, height: 16, fps: 10 },\n  ]\n\n  constructor(\n    context: CanvasRenderingContext2D\n  ) {\n    super(context)\n\n    this.attributes.hp.setMax(20)\n    this.attributes.power = 5\n\n    Cat.SPRITES.forEach(({ mode, img, width, height, fps }) => {\n      const image = new Image()\n      image.src = img\n      this.sprites.set(mode, new Sprite(image, width, height, fps))\n    })\n  }\n\n  render(delta: number) {\n    const sprite = this.sprites.get(this.mode)\n    sprite?.update(delta)\n    sprite?.draw(this.context, 0, 0, this.direction)\n  }\n\n  move(distance: Point) {\n    super.move(distance)\n    this.mode = Mode.RUNNING\n  }\n\n  stop() {\n    super.stop()\n    this.mode = Mode.IDLE\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1H4Ur\")).toString();","import Mobile from \"../mobile/Mobile\"\n\nexport default class CirclingTriangle extends Mobile {\n\n  constructor(\n    context: CanvasRenderingContext2D\n  ) {\n    super(context)\n\n    this.attributes.hp.setMax(5)\n    this.attributes.power = 5\n  }\n\n  render() {\n    this.context.save()\n    this.context.rotate(this.lifetime / 1000)\n    this.context.beginPath()\n    this.context.moveTo(0, -5)\n    this.context.lineTo(5, 5)\n    this.context.lineTo(0, 3)\n    this.context.lineTo(-5, 5)\n    this.context.lineTo(0, -5)\n    this.context.fillStyle = \"red\"\n    this.context.fill()\n    this.context.restore()\n  }\n}\n","import Point from \"../core/Point\"\nimport Mobile from \"../mobile/Mobile\"\n\nexport default class TargetPoint extends Mobile {\n  private visible = true\n\n  constructor(\n    context: CanvasRenderingContext2D,\n    private source: Mobile,\n  ) {\n    super(context)\n    this.isLiving = false\n  }\n\n  setVisible(visible: boolean) {\n    this.visible = visible\n  }\n\n  render() {\n    if (!this.visible) {\n      return\n    }\n    const dist = this.source.position.subtract(this.position)\n    this.context.beginPath()\n    this.context.moveTo(0, 0)\n    this.context.lineTo(dist.x, dist.y)\n    this.context.strokeStyle = '#FFF'\n    this.context.setLineDash([5, 15])\n    this.context.stroke()\n  }\n\n  moveTo(position: Point) {\n    super.moveTo(position)\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7agUk\")).toString();","import Mobile from \"../mobile/Mobile\";\nimport Sprite from \"../sprite/Sprite\";\n\n\nexport default abstract class SpriteEffectBase extends Mobile {\n\n  constructor(\n    context: CanvasRenderingContext2D,\n    private sprite: Sprite\n  ) {\n    super(context)\n    this.isLiving = false\n  }\n\n  protected checkLifetimeEnd(): boolean {\n    return this.sprite.loopCount > 0\n  }\n\n  protected render(delta: number): void {\n    this.sprite.update(delta)\n    this.sprite.draw(this.context, 0, 0, this.direction)\n  }\n}\n","import Sprite from \"../sprite/Sprite\"\nimport EffectSprite from \"../../../assets/images/confetti-sprites.png\"\nimport SpriteEffectBase from \"./SpriteEffectBase\"\n\nexport default class ConfettiEffect extends SpriteEffectBase {\n  constructor(\n    context: CanvasRenderingContext2D\n  ) {\n    const image = new Image()\n    image.src = EffectSprite\n    const sprite = new Sprite(image, 81, 81, 10, false)\n    super(context, sprite)\n  }\n\n  protected render(delta: number): void {\n    this.context.save()\n    const gap = this.direction.unit().multiply(30)\n    this.context.translate(gap.x, gap.y)\n    // sprite is facing left, so rotate 90 degrees to face up\n    this.context.rotate(this.direction.angle() + Math.PI / 2)\n    super.render(delta)\n    this.context.restore()\n  }\n}\n","import Point from \"../core/Point\"\n\nexport default class Space {\n  width = 0\n  height = 0\n  starElapsed = 0\n  backgroundColor = \"rgb(10, 10, 10)\"\n  starColorRange = 100\n  stars: Point[] = []\n  maxStars = 400\n\n  constructor(\n    private context: CanvasRenderingContext2D\n  ) {\n  }\n\n  animate(delta: number) {\n    this.render(delta)\n  }\n\n  private render(delta: number) {\n    this.renderBackground()\n    this.renderStars()\n\n    if (this.checkStarElapsed(delta)) {\n      this.updateStars()\n    }\n  }\n\n  private renderBackground() {\n    this.context.fillStyle = this.backgroundColor\n    this.context.fillRect(0, 0, this.width, this.height)\n  }\n\n  private renderStars() {\n    this.context.fillStyle = \"white\"\n    this.stars.forEach(star => {\n      this.context.fillRect(star.x, star.y, 1, 1)\n    })\n  }\n\n  private updateStars() {\n    this.stars = []\n    for (let i = 0; i < this.maxStars; i++) {\n      this.stars.push(new Point(\n        Math.random() * this.width,\n        Math.random() * this.height,\n      ))\n    }\n  }\n\n  private checkStarElapsed(delta: number) {\n    this.starElapsed += delta\n    if (this.starElapsed > 200) {\n      this.starElapsed = 0\n      return true\n    }\n    return false\n  }\n}\n","import Cat from \"./characters/Cat\"\nimport CirclingTriangle from \"./characters/CirclingTriangle\"\nimport TargetPoint from \"./characters/TargetPoint\"\nimport Point from \"./core/Point\"\nimport ConfettiEffect from \"./effects/ConfettiEffect\"\nimport Mobile from \"./mobile/Mobile\"\nimport Space from \"./space/Space\"\n\nexport default class Game {\n  options = {\n    showCoordinates: false,\n  }\n  width = 0\n  height = 0\n  lastTime = 0\n  delta = 0\n  space: Space\n  player: Mobile\n  targetPoint: TargetPoint\n  mobiles: Mobile[] = []\n\n  constructor(\n    private context: CanvasRenderingContext2D,\n  ) {\n    this.space = new Space(context)\n    this.player = new Cat(context)\n    this.targetPoint = new TargetPoint(context, this.player)\n    this.mobiles.push(this.targetPoint)\n\n    for (let i = 0; i < 10; i++) {\n      const enemy = new CirclingTriangle(context)\n      enemy.position.x = Math.random() * 1000 - 500\n      enemy.position.y = Math.random() * 1000 - 500\n      enemy.enemies.push(this.player)\n      this.player.enemies.push(enemy)\n      this.mobiles.push(enemy)\n    }\n  }\n\n  resize(width: number, height: number) {\n    this.width = width\n    this.height = height\n    this.space.width = width\n    this.space.height = height\n  }\n\n  animate(time: number) {\n    this.updateDelta(time)\n    this.updateNonPlayerMobiles()\n    this.updatePlayer()\n    this.context.restore()\n  }\n\n  movePlayer(x: number, y: number) {\n    const distance = new Point(x, y)\n    this.player.move(distance)\n    this.targetPoint.moveTo(this.player.position.add(distance))\n    this.targetPoint.setVisible(true)\n  }\n\n  stopPlayer() {\n    this.player.stop()\n    this.targetPoint.setVisible(false)\n    this.createCatAttackEffect()\n    this.attackEnemy()\n  }\n\n  getSummary() {\n    return `\n      Player: ${this.player.position.x}, ${this.player.position.y}\n      Mobiles: ${this.mobiles.length}\n    `\n  }\n\n  private updatePlayer() {\n    this.context.save()\n    this.context.translate(this.width / 2, this.height / 2)\n    this.player.animate(this.delta)\n    this.drawCoordinates(this.player, 20)\n    this.context.restore()\n    this.removeDeadEnemies()\n  }\n\n  private removeDeadEnemies() {\n    this.mobiles = this.mobiles.filter(mobile => mobile.attributes.hp.value > 0)\n  }\n\n  private attackEnemy() {\n    const nearestEnemy = this.mobiles\n      .filter(mobile => this.player.isOpponent(mobile))\n      .find(mobile => mobile.position.distanceTo(this.player.position) < 50)\n    if (!nearestEnemy) {\n      return\n    }\n    this.player.attack(nearestEnemy)\n  }\n\n  private updateNonPlayerMobiles() {\n    this.space.animate(this.delta)\n    this.mobiles.forEach(enemy => {\n      this.context.save()\n      this.context.translate(\n        this.width / 2 - this.player.position.x + enemy.position.x,\n        this.height / 2 - this.player.position.y + enemy.position.y,\n      )\n      enemy.animate(this.delta)\n      this.drawCoordinates(enemy, 10, 5)\n      this.context.restore()\n    })\n  }\n\n  private updateDelta(time: number) {\n    this.delta = time - this.lastTime\n    this.lastTime = time\n  }\n\n  private createCatAttackEffect() {\n    const effect = new ConfettiEffect(this.context)\n    effect.position = this.player.position\n    effect.direction = this.player.direction\n    effect.onLifetimeEnd = () => {\n      this.mobiles.splice(this.mobiles.indexOf(effect), 1)\n    }\n    this.mobiles.push(effect)\n  }\n\n  private drawCoordinates(mobile: Mobile, margin: number, size = 8) {\n    if (!this.options.showCoordinates || !mobile.isLiving) {\n      return\n    }\n    this.context.fillStyle = \"white\"\n    this.context.font = `${size}px Arial`\n    const text = `${Math.round(mobile.position.x)}, ${Math.round(mobile.position.y)}`\n    const left = text.length / 4 * size\n    this.context.fillText(text, -left, margin)\n  }\n}\n","import Point from \"./game/core/Point\"\nimport Game from \"./game/Game\"\n\nexport class App {\n  canvas: HTMLCanvasElement\n  context: CanvasRenderingContext2D\n  game: Game\n  width = 0\n  height = 0\n  keys: string[] = []\n\n  constructor() {\n    this.canvas = document.createElement(\"canvas\")\n    const context = this.canvas.getContext(\"2d\")\n    if (!context) {\n      throw new Error(\"Could not get canvas context\")\n    }\n    this.context = context\n    this.game = new Game(this.context)\n  }\n\n  start() {\n    document.body.appendChild(this.canvas)\n    window.addEventListener(\"resize\", this.resize.bind(this))\n    this.registerCanvasEvents()\n    this.resize()\n    this.animate()\n  }\n\n  enableDebugMode(): App {\n    this.game.options.showCoordinates = true\n    setInterval(() => {\n      console.log(this.game.getSummary())\n    }, 5000)\n    return this\n  }\n\n  private animate(time = 0) {\n    this.game.animate(time)\n\n    requestAnimationFrame(this.animate.bind(this))\n  }\n\n  private resize() {\n    this.width = document.body.clientWidth\n    this.height = document.body.clientHeight\n    this.canvas.width = this.width\n    this.canvas.height = this.height\n\n    this.game.resize(this.width, this.height)\n  }\n\n  private registerCanvasEvents() {\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown.bind(this))\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove.bind(this))\n    this.canvas.addEventListener(\"mouseup\", this.onTouchEnd.bind(this))\n    this.canvas.addEventListener(\"touchstart\", this.onTouchStart.bind(this))\n    this.canvas.addEventListener(\"touchmove\", this.onTouchStart.bind(this))\n    this.canvas.addEventListener(\"touchend\", this.onTouchEnd.bind(this))\n    document.addEventListener(\"keydown\", this.onKeyDown.bind(this))\n    document.addEventListener(\"keyup\", this.onKeyUp.bind(this))\n  }\n\n  private onMouseDown(event: MouseEvent) {\n    this.game.movePlayer(\n      ...this.calculateDistanceFromCenter(event.clientX, event.clientY)\n    )\n  }\n\n  private onMouseMove(event: MouseEvent) {\n    if (event.buttons === 0)\n      return\n    this.game.movePlayer(\n      ...this.calculateDistanceFromCenter(event.clientX, event.clientY)\n    )\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    this.game.movePlayer(\n      ...this.calculateDistanceFromCenter(event.touches[0].clientX, event.touches[0].clientY)\n    )\n  }\n\n  private onTouchEnd() {\n    this.game.stopPlayer()\n  }\n\n  private calculateDistanceFromCenter(x: number, y: number): [number, number] {\n    const center = new Point(this.width / 2, this.height / 2)\n    const point = new Point(x, y)\n    const distance = point.subtract(center)\n    return [distance.x, distance.y]\n  }\n\n  private onKeyDown(event: KeyboardEvent) {\n    if (!(event.key in App.KEY_TO_DIRECTION)) {\n      return\n    }\n    if (this.keys.includes(event.key)) {\n      return\n    }\n    this.keys.push(event.key)\n    this.updateKeys()\n  }\n\n  private onKeyUp(event: KeyboardEvent) {\n    if (!(event.key in App.KEY_TO_DIRECTION)) {\n      return\n    }\n    this.keys = this.keys.filter(key => key !== event.key)\n    this.updateKeys()\n  }\n\n  private updateKeys() {\n    if (this.keys.length === 0) {\n      this.game.stopPlayer()\n      return\n    }\n    const sum = this.keys.reduce((sum, key) => {\n      return [sum[0] + App.KEY_TO_DIRECTION[key][0], sum[1] + App.KEY_TO_DIRECTION[key][1]]\n    }, [0, 0])\n    this.game.movePlayer(sum[0], sum[1])\n  }\n\n  static KEY_TO_DIRECTION: { [key: string]: [number, number] } = {\n    \"w\": [0, -1],\n    \"a\": [-1, 0],\n    \"s\": [0, 1],\n    \"d\": [1, 0],\n    \"ArrowUp\": [0, -1],\n    \"ArrowLeft\": [-1, 0],\n    \"ArrowDown\": [0, 1],\n    \"ArrowRight\": [1, 0],\n  }\n}\n\nnew App().enableDebugMode().start()\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$1162b4d1b63bcb0b$export$2e2bcd8739ae039","constructor","x","y","this","static","add","point","subtract","unit","zero","Math","sqrt","multiply","scalar","angle","atan2","distanceTo","$6bfbb6c15128e9b5$export$2e2bcd8739ae039","hp","power","$6bfbb6c15128e9b5$var$NumericAttribute","of","damage","source","value","max","setMax","min","$73c3f5d8867f376c$export$2e2bcd8739ae039","context","position","velocity","direction","lifetime","maxLifetime","Infinity","isLiving","attributes","enemies","animate","delta","update","render","move","distance","moveTo","stop","attack","target","isOpponent","mobile","includes","checkLifetimeEnd","onLifetimeEnd","$da5fc1c35aff1e0d$export$2e2bcd8739ae039","image","frameWidth","frameHeight","framesPerSecond","loop","frameIndex","time","framesPerRow","imageLoaded","loopCount","onload","floor","width","dt","checkLoop","height","draw","ctx","row","col","flip","save","scale","drawImage","restore","$e2c9dcac0f02a629$exports","URL","resolve","import","meta","url","toString","$85c94ce00cb2a82b$var$Mode","Mode","$7357178c6a7828df$exports","$85c94ce00cb2a82b$export$2e2bcd8739ae039","sprites","Map","mode","IDLE","img","$parcel$interopDefault","fps","RUNNING","super","SPRITES","forEach","Image","src","set","sprite","get","$1680c37e97ccc699$export$2e2bcd8739ae039","rotate","beginPath","lineTo","fillStyle","fill","$593fdb6cc61fd03e$export$2e2bcd8739ae039","visible","setVisible","dist","strokeStyle","setLineDash","stroke","$1d5b3938f41b967b$exports","$1f66de5e70c11fdb$export$2e2bcd8739ae039","$8f889751dfd7c577$export$2e2bcd8739ae039","gap","translate","PI","$f8daf18d7ca6e6d0$export$2e2bcd8739ae039","starElapsed","backgroundColor","starColorRange","stars","maxStars","renderBackground","renderStars","checkStarElapsed","updateStars","fillRect","star","push","random","$1d65543a723a8bec$export$2e2bcd8739ae039","options","showCoordinates","lastTime","mobiles","space","player","targetPoint","enemy","resize","updateDelta","updateNonPlayerMobiles","updatePlayer","movePlayer","stopPlayer","createCatAttackEffect","attackEnemy","getSummary","drawCoordinates","removeDeadEnemies","filter","nearestEnemy","find","effect","splice","indexOf","margin","size","font","text","round","left","fillText","$2ae89aad8d89d959$export$86fbec116b87613f","canvas","document","createElement","getContext","game","start","body","appendChild","window","addEventListener","bind","registerCanvasEvents","enableDebugMode","setInterval","console","log","requestAnimationFrame","clientWidth","clientHeight","onMouseDown","onMouseMove","onTouchEnd","onTouchStart","onKeyDown","onKeyUp","event","calculateDistanceFromCenter","clientX","clientY","buttons","touches","center","key","KEY_TO_DIRECTION","updateKeys","sum","reduce","w","a","s","d","ArrowUp","ArrowLeft","ArrowDown","ArrowRight"],"version":3,"file":"index.2fa4fa60.js.map"}